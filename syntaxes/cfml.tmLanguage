<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>cfml</string>
		<string>cfm</string>
		<string>cfc</string>
	</array>
	<key>name</key>
	<string>CFML</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>(?i)(?=^\s*(/\*|//|import\b|(component|interface)(\s+|{)))</string>
			<key>contentName</key>
			<string>source.cfml.script</string>
			<key>end</key>
			<string>(?=not)possible</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-cfml-script</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)(?=&lt;cf(component|interface)\b)</string>
			<key>contentName</key>
			<string>source.cfml</string>
			<key>end</key>
			<string>(?=not)possible</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfcomponent</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cfinterface</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?=\S)</string>
			<key>contentName</key>
			<string>text.html.cfml</string>
			<key>end</key>
			<string>(?=not)possible</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>cfcomponent</key>
		<dict>
			<key>begin</key>
			<string>(?i)(?=&lt;cfcomponent)</string>
			<key>end</key>
			<string>(?i)(&lt;/)(cfcomponent)(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.cfml</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cfml storage.type.class.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(&lt;)(cfcomponent)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cfml storage.type.class.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.cfml meta.class.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#extends</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
			</array>
		</dict>
		<key>cffunction</key>
		<dict>
			<key>begin</key>
			<string>(?i)(?=&lt;cffunction)</string>
			<key>end</key>
			<string>(?i)(&lt;/)(cffunction)(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.cfml</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cfml storage.type.function.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(&lt;)(cffunction)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cfml storage.type.function.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.cfml meta.function.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.other.attribute-name.cfml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.key-value.cfml</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>string.quoted.double.cfml</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.cfml</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.cfml</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?i)\b(name)\s*(=)\s*((")([_$a-zA-Z][$\w]*)("))</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.other.attribute-name.cfml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.key-value.cfml</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>string.quoted.double.cfml</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.cfml</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.cfml</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?i)\b(access)\s*(=)\s*((")([_$a-zA-Z][$\w]*)("))</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.other.attribute-name.cfml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.key-value.cfml</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>string.quoted.double.cfml</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.cfml</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>storage.type.return-type.void.cfml</string>
								</dict>
								<key>7</key>
								<dict>
									<key>name</key>
									<string>storage.type.return-type.primitive.cfml</string>
								</dict>
								<key>8</key>
								<dict>
									<key>name</key>
									<string>storage.type.return-type.object.cfml</string>
								</dict>
								<key>9</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?x)(?i)
  \b(returntype)\s*(=)\s*((")(
  (void)
  |
  (any|array|binary|boolean|component|date|guid|numeric|query|string|struct|xml|uuid) # return-type.primitive
  |
  ([A-Za-z0-9_\.$]+) #return-type component/object (may need additional tokens)
)("))</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>end</key>
					<string>(?i)(?=&lt;/cffunction&gt;)</string>
					<key>name</key>
					<string>text.html.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>cfif</key>
		<dict>
			<key>begin</key>
			<string>(?i)(&lt;)(cfif|cfelseif)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cfml</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.cfml.script</string>
			<key>end</key>
			<string>&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.tag.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-cfml-script</string>
				</dict>
			</array>
		</dict>
		<key>cfinterface</key>
		<dict>
			<key>begin</key>
			<string>(?i)(?=&lt;cfinterface)</string>
			<key>end</key>
			<string>(?i)(&lt;/)(cfinterface)(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.cfml</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cfml storage.type.interface.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(&lt;)(cfinterface)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cfml storage.type.interface.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.cfml meta.interface.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#extends</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
			</array>
		</dict>
		<key>cfml-tags</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cffunction</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cfoutput</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cfquery</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cfif</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tags-with-script</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cfscript</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cfproperty</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(&lt;)(cf[a-z]+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(/?&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(&lt;/)(cf[a-z]+)(&gt;)</string>
					<key>name</key>
					<string>meta.tag.cfml</string>
				</dict>
			</array>
		</dict>
		<key>cfoutput</key>
		<dict>
			<key>begin</key>
			<string>(?i)(?=&lt;cfoutput)</string>
			<key>end</key>
			<string>(?i)(&lt;/)(cfoutput)(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.cfml</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(&lt;)(cfoutput)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=&gt;)</string>
					<key>name</key>
					<string>meta.tag.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&gt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.cfml punctuation.definition.tag.end.cfml.test</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.scope.cfoutput.cfml text.html.cfml</string>
					<key>end</key>
					<string>(?i)(?=&lt;/cfoutput&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>cfoutput-injection</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>##</string>
					<key>name</key>
					<string>constant.character.escape.hash.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>#</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.hash.cfml.start</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.cfml.script</string>
					<key>end</key>
					<string>#</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.hash.cfml.end</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
			</array>
		</dict>
		<key>cfproperty</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(&lt;)(cfproperty)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(/?&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.cfml meta.tag.property.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.other.attribute-name.cfml</string>
								</dict>
								<key>10</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.cfml</string>
								</dict>
								<key>11</key>
								<dict>
									<key>name</key>
									<string>string.unquoted.cfml meta.tag.property.name.cfml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.key-value.cfml</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>string.quoted.double.cfml</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.cfml</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>meta.tag.property.name.cfml</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.cfml</string>
								</dict>
								<key>7</key>
								<dict>
									<key>name</key>
									<string>string.quoted.single.cfml</string>
								</dict>
								<key>8</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.cfml</string>
								</dict>
								<key>9</key>
								<dict>
									<key>name</key>
									<string>meta.tag.property.name.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?i)\b(name)\s*(=)\s*(?:((")([^&lt;&gt;"']*)("))|((')([^&lt;&gt;"']*)('))|([^&lt;&gt;"'\s]*))</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>cfquery</key>
		<dict>
			<key>begin</key>
			<string>(?i)(?=&lt;cfquery\b)</string>
			<key>end</key>
			<string>(?i)(&lt;/)(cfquery)(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.cfml</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(&lt;)(cfquery)(?=\s|&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=&gt;)</string>
					<key>name</key>
					<string>meta.tag.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&gt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.cfml punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.scope.cfquery.cfml source.sql</string>
					<key>end</key>
					<string>(?i)(?=&lt;/cfquery&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#hash-delimiters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-sql</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>cfscript</key>
		<dict>
			<key>begin</key>
			<string>(?i)(&lt;)(cfscript)(\s+|&gt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.cfml</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.cfml.script</string>
			<key>end</key>
			<string>(?i)(&lt;/)(cfscript)(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.cfml</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>&lt;!---.*?---&gt;</string>
					<key>name</key>
					<string>comment.line.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;!---</string>
					<key>end</key>
					<string>---&gt;</string>
					<key>name</key>
					<string>comment.block.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>extends</key>
		<dict>
			<key>begin</key>
			<string>(?i)\b(extends)\s*(=)\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.extends.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>((")([a-zA-Z0-9:.]+)?("))|((')([a-zA-Z0-9:.]+)?('))|([a-zA-Z0-9:.]+)|(?=[^a-zA-Z0-9:.])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.cfml</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>string.quoted.single.cfml</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.cfml</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>string.unquoted.cfml entity.other.inherited-class.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.inheritance.cfml</string>
		</dict>
		<key>hash-delimiters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>##</string>
					<key>name</key>
					<string>constant.character.escape.hash.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>#</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.hash.cfml.start</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.cfml.script</string>
					<key>end</key>
					<string>#</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.hash.cfml.end</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-core</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-round-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-square-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-curly-brackets</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*\*(?!/)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.cfml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-component</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(component)(?=(\s+|{))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.class.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-component-attributes</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(interface)(?=(\s+|{))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.interface.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.interface.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-component-attributes</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-component-attributes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(extends)\s*(=)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.extends.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((")([a-zA-Z0-9:.]+)?("))|((')([a-zA-Z0-9:.]+)?('))|([a-zA-Z0-9:.]+)|(?=[^a-zA-Z0-9:.])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.cfml</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.cfml</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml entity.other.inherited-class.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.class.inheritance.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-tag-generic-attribute</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-constructor</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(new)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.new.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))|(?=[^_$\w.\(])</string>
					<key>name</key>
					<string>meta.instance.constructor</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.class.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>([_$\w.]*\.)?([_$\w]*)(?=\()</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.arguments.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.arguments.end.cfml</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function-call.method.arguments.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>,</string>
									<key>name</key>
									<string>punctuation.definition.separator.arguments.cfml</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i:(\w+)\s*(?=\=[^\=]))</string>
									<key>name</key>
									<string>entity.other.method-parameter.cfml</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-cfml-script-expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-core</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-labels</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-for</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-switch</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-punctuation</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-curly-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.curly.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.curly.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.braces.curly</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-core</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-support</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-language-constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-language-variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-constructor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-component</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-method-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-tag-in-script-cf</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-tag-in-script</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-variable</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-for</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)\b(for)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.loop.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.for.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.brace.round.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#source-cfml-script-keyword-storage</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-cfml-script-expression</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-cfml-script-punctuation</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)
(?:
  (?:
    (?i:\b(private|package|public|remote)\s+)?
    (?i:\b
      (void)\s+
      |
      (any|array|binary|boolean|component|date|guid|numeric|query|string|struct|xml|uuid)\s+
      |
      ([A-Za-z0-9_\.$]+)\s+
      |
      ([A-Za-z0-9_\.$]+)(\[\])?\s+
    )?
  )
)
(?i:(function))
\s+
(?:
  (init)
  |
  ([_$a-zA-Z][$\w]*)
)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.void.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.primitive.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.object.cfml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.object.array.cfml</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>meta.group.braces.square meta.brace.square.cfml</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.cfml</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.constructor.cfml</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.function.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-function-declaration-parameters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-function-properties</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\b[_$a-zA-Z][$\w]*)\s*=\s*(function)(?:(?=\s|[(]))\s*([_$a-zA-Z][$\w]*)?\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>name</key>
					<string>meta.function.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-function-declaration-parameters</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)\b(function)(?=\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>name</key>
					<string>meta.function.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-function-declaration-parameters</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-function-call</key>
		<dict>
			<key>begin</key>
			<string>([_$a-zA-Z][$\w]*)\s*(?=\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.function.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=\))</string>
			<key>name</key>
			<string>meta.function-call.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.arguments.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.definition.separator.arguments.cfml</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i:(\w+)\s*(?=\=[^\=]))</string>
							<key>name</key>
							<string>entity.other.function-parameter.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-function-declaration-parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i:required)</string>
							<key>name</key>
							<string>keyword.other.required.argument.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-storage-types</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[_$a-zA-Z][$\w]*</string>
							<key>name</key>
							<string>variable.parameter.function.cfml</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.parameter.function.cfml</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>=</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[,)])</string>
							<key>name</key>
							<string>meta.parameter.optional.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#source-cfml-script-expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-comments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-function-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-tag-generic-attribute</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-hash-delimiters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>##</string>
					<key>name</key>
					<string>constant.character.escape.hash.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>#</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.hash.cfml.start</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.cfml.script</string>
					<key>end</key>
					<string>#</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.hash.cfml.end</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-core</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-keyword-storage</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(var)\b</string>
					<key>name</key>
					<string>storage.modifier.cfml</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-keyword-storage</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(return)\b</string>
					<key>name</key>
					<string>keyword.control.flow.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(if|else)\b</string>
					<key>name</key>
					<string>keyword.control.conditional.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(catch|finally|rethrow|throw|try)\b(?!\()</string>
					<key>name</key>
					<string>keyword.control.trycatch.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(break|continue|do|while)\b</string>
					<key>name</key>
					<string>keyword.control.loop.cfml</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-labels</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)
(?&lt;!\?)(?&lt;!\?\s)(?=(
  ((')((?:[^']|\\')*)('))|
  ((")((?:[^"]|\\")*)("))
)\s*:)</string>
					<key>end</key>
					<string>:</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-string</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.label.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\.|\?|\?\s)([_$a-zA-Z][$\w]*)\s*(:)</string>
					<key>name</key>
					<string>constant.other.object.key.cfml</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-language-constant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:true)\b</string>
					<key>name</key>
					<string>constant.language.boolean.true.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:false)\b</string>
					<key>name</key>
					<string>constant.language.boolean.false.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:null)\b</string>
					<key>name</key>
					<string>constant.language.null.cfml</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-language-variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:super)\b</string>
					<key>name</key>
					<string>variable.language.super.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:this)\b</string>
					<key>name</key>
					<string>variable.language.this.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:thread)\b(?=[\[.])</string>
					<key>name</key>
					<string>variable.language.scope.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:(application|arguments|attributes|caller|cgi|client|cookie|flash|form|local|request|server|session|thistag|url|variables|self|argumentcollection))\b</string>
					<key>name</key>
					<string>variable.language.scope.cfml</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-method-call</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\.)([_$a-zA-Z][$\w]*)\s*(?=\()</string>
			<key>end</key>
			<string>(?&lt;=\))</string>
			<key>name</key>
			<string>meta.function-call.method.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.method.arguments.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.definition.separator.arguments.cfml</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i:(\w+)\s*(?=\=[^\=]))</string>
							<key>name</key>
							<string>entity.other.method-parameter.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-number</key>
		<dict>
			<key>match</key>
			<string>((\b[0-9]+)|(\.[0-9]+[0-9\.]*)|(0(x|X)[0-9a-fA-F]+)|(\.[0-9]+)((e|E)(\+|-)?[0-9]+)?([LlFfUuDd]|UL|ul)?)\b</string>
			<key>name</key>
			<string>constant.numeric.cfml</string>
		</dict>
		<key>source-cfml-script-operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(in|new|void)\b</string>
					<key>name</key>
					<string>keyword.operator.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!(?!=)|&amp;&amp;|\|\|</string>
					<key>name</key>
					<string>keyword.operator.logical.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i:(not|and|or|xor|eqv|imp))\b</string>
					<key>name</key>
					<string>keyword.operator.logical.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i:(greater|less|than|equal\s+to|does|contains|equal|eq|neq|lt|lte|le|gt|gte|ge|and|is))\b</string>
					<key>name</key>
					<string>keyword.operator.decision.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=(?!=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%=|&amp;=|\*=|\+=|-=|/=</string>
					<key>name</key>
					<string>keyword.operator.assignment.augmented.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;</string>
					<key>name</key>
					<string>keyword.operator.concat.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;=|&gt;=|&lt;|&gt;</string>
					<key>name</key>
					<string>keyword.operator.relational.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>==|!=</string>
					<key>name</key>
					<string>keyword.operator.comparison.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--|\+\+|/|%|\*|\+|-</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\?|:</string>
					<key>name</key>
					<string>keyword.operator.ternary.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>keyword.operator.accessor.cfml</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-punctuation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.statement.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>meta.delimiter.comma.cfml</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-round-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.braces.round</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\)</string>
					<key>name</key>
					<string>invalid.illegal.stray.brace.round.cfml</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-square-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.square.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.square.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.braces.square</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-storage-types</key>
		<dict>
			<key>match</key>
			<string>\b(?i:(function|string|date|struct|array|void|binary|numeric|boolean|query|xml|uuid|any))\b</string>
			<key>name</key>
			<string>storage.type.primitive.cfml</string>
		</dict>
		<key>source-cfml-script-string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-string-quoted-single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-string-quoted-double</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-string-quoted-double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"(?!")</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-hash-delimiters</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-string-quoted-single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'(?!')</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-hash-delimiters</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(createobject)(\()(?=(?:\s*type\s*=)?\s*["']component["']\s*,)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.support.function-call.arguments.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.support.function-call.cfml meta.support.function-call.createcomponent.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(createobject)(\()(?=(?:\s*type\s*=)?\s*["']java["']\s*,)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.support.function-call.arguments.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.support.function-call.cfml meta.support.function-call.createjavaobject.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
(?&lt;!\.)\b
(?i:
    (abs|acos|addsoaprequestheader|addsoapresponseheader|ajaxlink|ajaxonload|applicationstarttime
    |applicationstop|array|arrayappend|arrayavg|arrayclear|arraycontains|arraycontainsnocase
    |arraydelete|arraydeleteat|arrayeach|arrayevery|arrayfilter|arrayfind|arrayfindall|arrayfindallnocase
    |arrayfindnocase|arrayfirst|arrayindexexists|arrayinsertat|arrayisdefined|arrayisempty
    |arraylast|arraylen|arraymap|arraymax|arraymedian|arraymerge|arraymid|arraymin|arraynew|arrayprepend
    |arrayreduce|arrayresize|arrayreverse|arrayset|arrayslice|arraysome|arraysort|arraysum|arrayswap
    |arraytolist|arraytostruct|asc|asin|atn|beat|binarydecode|binaryencode|bitand|bitmaskclear|bitmaskread
    |bitmaskset|bitnot|bitor|bitshln|bitshrn|bitxor|cacheclear|cachecount|cachedelete|cacheget|cachegetall
    |cachegetallids|cachegetdefaultcachename|cachegetmetadata|cachegetproperties|cacheidexists|cachekeyexists
    |cacheput|cacheremove|cacheremoveall|cachesetproperties|callstackdump|callstackget|canonicalize|ceiling
    |cfusion_decrypt|cfusion_encrypt|charsetdecode|charsetencode|chr|cjustify|collectioneach|collectionevery
    |collectionfilter|collectionmap|collectionreduce|collectionsome|compare|comparenocase|componentcacheclear
    |componentcachelist|componentinfo|compress|contractpath|cos|createdate|createdatetime|createdynamicproxy
    |createguid|createobject|createodbcdate|createodbcdatetime|createodbctime|createtime|createtimespan
    |createuniqueid|createuuid|csrfgeneratetoken|csrfverifytoken|ctcacheclear|ctcachelist
    |datasourceflushmetacache|dateadd|datecompare|dateconvert|datediff|dateformat|datepart|datetimeformat|day
    |dayofweek|dayofweekasstring|dayofweekshortasstring|dayofyear|daysinmonth|daysinyear|de|decimalformat
    |decodefromurl|decrementvalue|decrypt|decryptbinary|deleteclientvariable|deserializejson|directorycopy
    |directorycreate|directorydelete|directoryexists|directorylist|directoryrename|dollarformat|dump|duplicate
    |each|echo|empty|encodeforcss|encodefordn|encodeforhtml|encodeforhtmlattribute|encodeforjavascript
    |encodeforldap|encodeforurl|encodeforxml|encodeforxmlattribute|encodeforxpath|encrypt|encryptbinary|entitydelete
    |entityload|entityloadbyexample|entityloadbypk|entitymerge|entitynamearray|entitynamelist|entitynew|entityreload
    |entitysave|entitytoquery|esapidecode|esapiencode|evaluate|exp|expandpath|extract|fileappend|fileclose|filecopy
    |filedelete|fileexists|filegetmimetype|fileiseof|filemove|fileopen|fileread|filereadbinary|filereadline|fileseek
    |filesetaccessmode|filesetattribute|filesetlastmodified|fileskipbytes|fileupload|fileuploadall|filewrite
    |filewriteline|find|findnocase|findoneof|firstdayofmonth|fix|formatbasen|generatesecretkey|getapplicationmetadata
    |getapplicationsettings|getauthuser|getbasetagdata|getbasetaglist|getbasetemplatepath|getbuiltinfunction
    |getcanonicalpath|getclasspath|getclientvariableslist|getcomponentmetadata|getcontextroot|getcpuusage
    |getcurrentcontext|getcurrenttemplatepath|getdirectoryfrompath|getencoding|getfilefrompath|getfileinfo|getfreespace
    |getfunctioncalledname|getfunctiondata|getfunctionkeywords|getfunctionlist|gethttprequestdata|gethttptimestring
    |getk2serverdoccount|getk2serverdoccountlimit|getlocale|getlocaledisplayname|getlocalhostip|getluceeid
    |getmemoryusage|getmetadata|getmetricdata|getnumericdate|getpagecontext|getprinterlist|getprofilesections
    |getprofilestring|getreadableimageformats|getsoaprequest|getsoaprequestheader|getsoapresponse|getsoapresponseheader
    |getsystemfreememory|getsystemtotalmemory|gettagdata|gettaglist|gettempdirectory|gettempfile|gettemplatepath
    |gettickcount|gettimezone|gettimezoneinfo|gettoken|gettotalspace|getuserroles|getvariable|getvfsmetadata
    |getwriteableimageformats|hash|hash40|hmac|hour|htmlcodeformat|htmleditformat|htmlparse|iif|imageaddborder
    |imageblur|imageclearrect|imagecopy|imagecrop|imagedrawarc|imagedrawbeveledrect|imagedrawcubiccurve|imagedrawimage
    |imagedrawline|imagedrawlines|imagedrawoval|imagedrawpoint|imagedrawquadraticcurve|imagedrawrect|imagedrawroundrect
    |imagedrawtext|imagefilter|imagefiltercolormap|imagefiltercurves|imagefilterkernel|imagefilterwarpgrid|imageflip
    |imagefonts|imageformats|imagegetblob|imagegetbufferedimage|imagegetexifmetadata|imagegetexiftag|imagegetheight
    |imagegetiptctag|imagegetwidth|imagegrayscale|imageinfo|imagenegative|imagenew|imageoverlay|imagepaste|imageread
    |imagereadbase64|imageresize|imagerotate|imagerotatedrawingaxis|imagescaletofit|imagesetantialiasing
    |imagesetbackgroundcolor|imagesetdrawingalpha|imagesetdrawingcolor|imagesetdrawingstroke|imagesetdrawingtransparency
    |imagesharpen|imageshear|imagesheardrawingaxis|imagetranslate|imagetranslatedrawingaxis|imagewrite|imagewritebase64
    |imagexordrawingmode|incrementvalue|inputbasen|insert|int|invoke|isarray|isbinary|isboolean|isclosure
    |iscustomfunction|isdate|isdebugmode|isdefined|isempty|isimage|isimagefile|isinstanceof|isipinrange|isipv6
    |isjson|isleapyear|islocalhost|isnotmap|isnull|isnumeric|isnumericdate|isobject|ispdfobject|isquery|issimplevalue
    |issoaprequest|isstruct|isuserinanyrole|isuserinrole|isuserloggedin|isvalid|isvideofile|iswddx|isxml|isxmlattribute
    |isxmldoc|isxmlelem|isxmlnode|isxmlroot|iszipfile|javacast|jsstringformat|lcase|left|len|listappend|listavg
    |listchangedelims|listcompact|listcontains|listcontainsnocase|listdeleteat|listeach|listevery|listfilter|listfind
    |listfindnocase|listfirst|listgetat|listindexexists|listinsertat|listitemtrim|listlast|listlen|listmap|listprepend
    |listqualify|listreduce|listremoveduplicates|listrest|listsetat|listsome|listsort|listtoarray|listtrim
    |listvaluecount|listvaluecountnocase|ljustify|location|log|log10|lscurrencyformat|lsdateformat|lsdatetimeformat
    |lsdayofweek|lseurocurrencyformat|lsiscurrency|lsisdate|lsisnumeric|lsnumberformat|lsparsecurrency|lsparsedatetime
    |lsparseeurocurrency|lsparsenumber|lstimeformat|lsweek|ltrim|max|metaphone|mid|millisecond|min|minute|month
    |monthasstring|monthshortasstring|newline|now|nowserver|nullvalue|numberformat|objectequals|objectload|objectsave
    |ormclearsession|ormcloseallsessions|ormclosesession|ormevictcollection|ormevictentity|ormevictqueries
    |ormexecutequery|ormflush|ormgetsession|ormgetsessionfactory|ormreload|pagepoolclear|pagepoollist|paragraphformat
    |parameterexists|parsedatetime|parsenumber|pi|precisionevaluate|preservesinglequotes|quarter|query|queryaddcolumn
    |queryaddrow|querycolumnarray|querycolumncount|querycolumndata|querycolumnexists|querycolumnlist|queryconvertforgrid
    |querycurrentrow|querydeletecolumn|querydeleterow|queryeach|queryevery|queryexecute|queryfilter|querygetcell
    |querygetrow|querymap|querynew|queryrecordcount|queryreduce|queryrowdata|querysetcell|queryslice|querysome
    |querysort|quotedvaluelist|rand|randomize|randrange|refind|refindnocase|releasecomobject|rematch|rematchnocase
    |removechars|repeatstring|replace|replacelist|replacenocase|rereplace|rereplacenocase|restdeleteapplication
    |restinitapplication|restsetresponse|reverse|right|rjustify|round|rtrim|second|sendgatewaymessage|serialize
    |serializejson|sessioninvalidate|sessionrotate|sessionstarttime|setencoding|setlocale|setprofilestring|settimezone
    |setvariable|sgn|sin|sizeof|sleep|soundex|spanexcluding|spanincluding|spreadsheetnew|spreadsheetsetcellvalue
    |spreadsheetwrite|sqr|sslcertificateinstall|sslcertificatelist|storeaddacl|storegetacl|storesetacl|stringlen|stripcr
    |structappend|structclear|structcopy|structcount|structdelete|structeach|structevery|structfilter|structfind
    |structfindkey|structfindvalue|structget|structinsert|structisempty|structkeyarray|structkeyexists|structkeylist
    |structkeytranslate|structmap|structnew|structreduce|structsome|structsort|structupdate|systemcacheclear|systemoutput
    |tan|threadjoin|threadterminate|throw|timeformat|tobase64|tobinary|tonumeric|toscript|tostring|trace|transactioncommit
    |transactionrollback|transactionsetsavepoint|trim|truefalseformat|ucase|ucfirst|unserializejava|urldecode|urlencode
    |urlencodedformat|urlsessionformat|val|valuearray|valuelist|verifyclient|week|wrap|writedump|writelog|writeoutput
    |xmlchildpos|xmlelemnew|xmlformat|xmlgetnodetype|xmlnew|xmlparse|xmlsearch|xmltransform|xmlvalidate|year|yesnoformat)
  )(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.support.function-call.arguments.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.support.function-call.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
(\.)
(?i:
  (add|addcolumn|addrow|append|avg|blur|cjustify|clear|clearrect|columnarray|columncount|columndata|columnexists
  |columnlist|compare|comparenocase|contains|containsnocase|copy|count|crop|currentrow|dateformat|day|dayofweek
  |dayofyear|daysinmonth|daysinyear|delete|deleteat|deletecolumn|deleterow|diff|drawarc|drawcubiccurve|drawline
  |drawlines|drawoval|drawpoint|drawquadraticcurve|drawrect|drawroundrect|each|every|filter|find|findall
  |findallnocase|findkey|findnocase|findoneof|findvalue|first|firstdayofmonth|flip|get|getbufferedimage|getcell
  |getheight|getrow|gettoken|getwidth|grayscale|hour|indexexists|info|insert|insertat|isdefined|isempty|keyarray
  |keyexists|keylist|keytranslate|last|lcase|left|len|listappend|listavg|listchangedelims|listcompact|listcontains
  |listcontainsnocase|listdeleteat|listeach|listevery|listfilter|listfind|listfindnocase|listfirst|listgetat
  |listindexexists|listinsertat|listitemtrim|listlast|listlen|listmap|listprepend|listqualify|listreduce
  |listremoveduplicates|listrest|listsetat|listsome|listsort|listtoarray|listvaluecount|listvaluecountnocase
  |ljustify|lsdateformat|lsdayofweek|ltrim|map|max|median|merge|mid|min|minute|month|overlay|part|paste|prepend
  |quarter|recordcount|reduce|refind|refindnocase|rematch|rematchnocase|removechars|repeatstring|replace|replacenocase
  |rereplace|rereplacenocase|resize|reverse|right|rowdata|rtrim|scaletofit|second|set|setantialiasing|setcell
  |setdrawingstroke|sharpen|slice|some|sort|spanexcluding|spanincluding|stripcr|sum|swap|tolist|tostruct|translate
  |trim|ucase|update|week|wrap|writebase64|year)
)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.accessor.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.member.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.member.arguments.cfml punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.support.function-call.member.arguments.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.member.arguments.cfml punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.support.function-call.member.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-switch</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)\b(switch)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.switch.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.curly.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.switch.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-round-brackets</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.brace.curly.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?&lt;!\.)\b(case|default)\b</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.control.switch.cfml</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=:)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#source-cfml-script-expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-cfml-script-core</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-tag-generic-attribute</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([a-zA-Z0-9:-]+)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(=)\s*((?:[^\s&lt;&gt;/'"{;]|/(?!/&gt;))+)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>punctuation.separator.key-value.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-tag-string</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-tag-generic-attribute-script</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([a-zA-Z0-9:-]+)\b</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>=</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^\s=])|(?=[;{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-tag-in-script</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(property)(?!\s+in\b)(\s+(any|array|binary|boolean|component|date|guid|numeric|query|string|struct|xml|uuid|[_$a-zA-Z][$\w]*))?\s+([_$a-zA-Z][$\w]*\b)(?!\s*=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml meta.tag.property.name.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(;|{))</string>
					<key>name</key>
					<string>meta.tag.script.cfml meta.tag.property.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(property)(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*$|\s*[{;]))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(;|{))</string>
					<key>name</key>
					<string>meta.tag.script.cfml meta.tag.property.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(param)(?!\s+in\b)(?=\s+(name|default|max|maxLength|min|pattern|type)\s*=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(param)(?!\s+in\b)\s+([_$a-zA-Z][$\w\.]*)(?=\s+(name|default|max|maxLength|min|pattern|type))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(param)(?!\s+in\b)(\s+([_$a-zA-Z][$\w]*))?\s+([_$a-zA-Z][$\w\.]*\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(param)(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*[{;]|\s*$))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)(\b)(?i:(abort))(?!s+in\b)(?=(s+[a-zA-Z]|s*;|s*$))</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
(?&lt;!\.)(\b)
(?i:
  (ajaximport|ajaxproxy|applet|application|argument|associate|authenticate|break|cache|chart|chartdata
  |chartseries|col|collection|content|cookie|dbinfo|directory|div|document|documentitem
  |documentsection|dump|error|execute|exit|feed|file|flush|form|forward|ftp|graph|graphdata
  |header|htmlbody|htmlhead|http|httpparam|image|imap|import|include|index|input|insert|invoke|invokeargument
  |layout|layoutarea|ldap|location|lock|log|login|loginuser|logout|loop|mail|mailparam|mailpart|map|mapitem|mediaplayer
  |module|object|objectcache|output|pageencoding|pdf|pdfparam|pop|processingdirective|procparam|procresult
  |query|queryparam|registry|rethrow|retry|savecontent|schedule|search|select|servlet|servletparam
  |setting|silent|sleep|slider|stopwatch|storedproc|table|textinput|thread|throw|timer|trace|transaction
  |update|video|videoplayer|videoplayerparam|wddx|window|xml|zip|zipparam)
)(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*[{]|\s*$))</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#source-cfml-script-tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-tag-in-script-cf</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(cf[\w]+)\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.tag.script.cf.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.other.attribute-name.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b([a-zA-Z0-9:-]+)\b</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>=</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.key-value.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[^\s=])|(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#source-cfml-script-expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-tag-string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-tag-string-quoted-single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-string-quoted-double</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-tag-string-quoted-double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"(?!")</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-hash-delimiters</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-tag-string-quoted-single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'(?!')</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-cfml-script-hash-delimiters</string>
				</dict>
			</array>
		</dict>
		<key>source-cfml-script-variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b[A-Z][_$\dA-Z]*\b</string>
					<key>name</key>
					<string>variable.other.constant.cfml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.dollar.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(\$)[$\w]+</string>
					<key>name</key>
					<string>variable.other.dollar.cfml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.class.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.accessor.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.static.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([A-Z][$\w]*)\s*(\.)([_$a-zA-Z][$\w]*)</string>
					<key>name</key>
					<string>meta.property.class.cfml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.object.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\.)[_$a-zA-Z][$\w]*\s*(?=[\[\.])</string>
					<key>name</key>
					<string>variable.other.object.cfml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;=\.)\s*[_$a-zA-Z][$\w]*</string>
					<key>name</key>
					<string>meta.property.object.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[_$a-zA-Z][$\w]*</string>
					<key>name</key>
					<string>variable.other.cfml</string>
				</dict>
			</array>
		</dict>
		<key>source-css</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-css-comment-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-selector</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\s*((@)charset\b)\s*</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.at-rule.charset.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.keyword.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*((?=;|$))</string>
					<key>name</key>
					<string>meta.at-rule.charset.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-string-double</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-string-single</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\s*((@)import\b)\s*</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.at-rule.import.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.keyword.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*((?=;|\}))</string>
					<key>name</key>
					<string>meta.at-rule.import.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-string-double</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-string-single</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\s*(url)\s*(\()\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.function.url.css</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.function.css</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\s*(\))\s*</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.function.css</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfml-tags</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[^'") \t]+</string>
									<key>name</key>
									<string>variable.parameter.url.css</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-css-string-single</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-css-string-double</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-media-query-list</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*((@)font-face)\s*(?=\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.at-rule.font-face.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.keyword.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.property-list.css</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.at-rule.font-face.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-rule-list</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=^\s*@media\s*.*?\{)</string>
					<key>end</key>
					<string>\s*(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.property-list.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>^\s*((@)media)(?=.*?\{)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.control.at-rule.media.css</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.keyword.css</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>support.constant.media.css</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\s*(?=\{)</string>
							<key>name</key>
							<string>meta.at-rule.media.css</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfml-tags</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-css-media-query-list</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\s*(\{)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.property-list.css</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfml-tags</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-css</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\{)</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.property-list.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-rule-list</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-css-cfoutput</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-css-cfoutput-comment-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-cfoutput-selector</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\s*((@)charset\b)\s*</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.at-rule.charset.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.keyword.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*((?=;|$))</string>
					<key>name</key>
					<string>meta.at-rule.charset.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-string-double</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-string-single</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\s*((@)import\b)\s*</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.at-rule.import.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.keyword.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*((?=;|\}))</string>
					<key>name</key>
					<string>meta.at-rule.import.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-string-double</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-string-single</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\s*(url)\s*(\()\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.function.url.css</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.function.css</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\s*(\))\s*</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.function.css</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfoutput-injection</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[^'") \t]+</string>
									<key>name</key>
									<string>variable.parameter.url.css</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-css-cfoutput-string-single</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-css-cfoutput-string-double</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-media-query-list</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*((@)font-face)\s*(?=\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.at-rule.font-face.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.keyword.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.property-list.css</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.at-rule.font-face.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-rule-list</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=^\s*@media\s*.*?\{)</string>
					<key>end</key>
					<string>\s*(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.property-list.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>^\s*((@)media)(?=.*?\{)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.control.at-rule.media.css</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.keyword.css</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>support.constant.media.css</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\s*(?=\{)</string>
							<key>name</key>
							<string>meta.at-rule.media.css</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfoutput-injection</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-css-cfoutput-media-query-list</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\s*(\{)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.property-list.css</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfoutput-injection</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-css-cfoutput</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\{)</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.property-list.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-rule-list</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-css-cfoutput-color-values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>http://www.w3.org/TR/CSS21/syndata.html#value-def-color</string>
					<key>match</key>
					<string>\b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\b</string>
					<key>name</key>
					<string>support.constant.color.w3c-standard-color-name.css</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>These colours are mostly recognised but will not validate. ref: http://www.w3schools.com/css/css_colornames.asp</string>
					<key>match</key>
					<string>\b(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|turquoise|violet|wheat|whitesmoke|yellowgreen)\b</string>
					<key>name</key>
					<string>invalid.deprecated.color.w3c-non-standard-color-name.css</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(hsla?|rgba?)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.misc.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?x)\b
							    (0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\s*,\s*){2}
							    (0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\b)
							    (\s*,\s*((0?\.[0-9]+)|[0-1]))?
							</string>
							<key>name</key>
							<string>constant.other.color.rgb-value.css</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b([0-9]{1,2}|100)\s*%,\s*([0-9]{1,2}|100)\s*%,\s*([0-9]{1,2}|100)\s*%</string>
							<key>name</key>
							<string>constant.other.color.rgb-percentage.css</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-numeric-values</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-css-cfoutput-comment-block</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.css</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.css</string>
		</dict>
		<key>source-css-cfoutput-media-query</key>
		<dict>
			<key>begin</key>
			<string>(?i)\s*(only|not)?\s*(all|aural|braille|embossed|handheld|print|projection|screen|tty|tv)?</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.logic.media.css</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.constant.media.css</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\s*(?:(,)|(?=[{;]))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arbitrary-repitition.css</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\s*(and)?\s*(\()\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.logic.media.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?x)
	                            (
	                                ((min|max)-)?
	                                (
	                                    ((device-)?(height|width|aspect-ratio))|
	                                    (color(-index)?)|monochrome|resolution
	                                )
	                            )|grid|scan|orientation
	                            \s*(?=[:)])</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>support.type.property-name.media.css</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(:)|(?=\))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.key-value.css</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(portrait|landscape|progressive|interlace)</string>
							<key>name</key>
							<string>support.constant.property-value.css</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.numeric.css</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.arithmetic.css</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>constant.numeric.css</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s*(\d+)(/)(\d+)</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-numeric-values</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-css-cfoutput-media-query-list</key>
		<dict>
			<key>begin</key>
			<string>\s*(?=[^{;])</string>
			<key>end</key>
			<string>\s*(?=[{;])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-cfoutput-media-query</string>
				</dict>
			</array>
		</dict>
		<key>source-css-cfoutput-numeric-values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.constant.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b</string>
					<key>name</key>
					<string>constant.other.color.rgb-value.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
					    (?:-|\+)?(?:(?:[0-9]+(?:\.[0-9]+)?)|(?:\.[0-9]+))
					    ((?:px|pt|ch|cm|mm|in|r?em|ex|pc|deg|g?rad|dpi|dpcm|s)\b|%)?
					</string>
					<key>name</key>
					<string>constant.numeric.css</string>
				</dict>
			</array>
		</dict>
		<key>source-css-cfoutput-property-values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(absolute|all(-scroll)?|always|armenian|auto|avoid|baseline|below|bidi-override|block|bold|bolder|both|bottom|break-all|break-word|capitalize|center|char|circle|cjk-ideographic|col-resize|collapse|crosshair|dashed|decimal-leading-zero|decimal|default|disabled|disc|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ellipsis|fixed|geometricPrecision|georgian|groove|hand|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|inactive|inherit|inline-block|inline|inset|inside|inter-ideograph|inter-word|italic|justify|katakana-iroha|katakana|keep-all|left|lighter|line-edge|line-through|line|list-item|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|medium|middle|move|n-resize|ne-resize|newspaper|no-drop|no-repeat|nw-resize|none|normal|not-allowed|nowrap|oblique|optimize(Legibility|Quality|Speed)|outset|outside|overline|pointer|pre(-(wrap|line))?|progress|relative|repeat-x|repeat-y|repeat|right|ridge|row-resize|rtl|s-resize|scroll|se-resize|separate|small-caps|solid|square|static|strict|sub|super|sw-resize|table-footer-group|table-header-group|tb-rl|text-bottom|text-top|text|thick|thin|top|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|vertical(-(ideographic|text))?|visible(Painted|Fill|Stroke)?|w-resize|wait|whitespace|zero|smaller|larger|((xx?-)?(small|large))|painted|fill|stroke)\b</string>
					<key>name</key>
					<string>support.constant.property-value.css</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\b(?i:arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace)\b)</string>
					<key>name</key>
					<string>support.constant.font-name.css</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-cfoutput-numeric-values</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-cfoutput-color-values</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-cfoutput-string-double</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-cfoutput-string-single</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(rect)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.misc.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-numeric-values</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(format|local|url|attr|counter|counters)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.misc.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-string-single</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-string-double</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^'") \t]+</string>
							<key>name</key>
							<string>variable.parameter.misc.css</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\!\s*important</string>
					<key>name</key>
					<string>keyword.other.important.css</string>
				</dict>
			</array>
		</dict>
		<key>source-css-cfoutput-rule-list</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.property-list.css</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\s*\})</string>
			<key>name</key>
			<string>meta.property-list.css</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-cfoutput-comment-block</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;![-a-z])(?=[-a-z])</string>
					<key>end</key>
					<string>$|(?![-a-z])</string>
					<key>name</key>
					<string>meta.property-name.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(azimuth|background-attachment|background-color|background-image|background-position|background-repeat|background|box-shadow|border-radius|border-bottom-color|border-bottom-style|border-bottom-width|border-bottom|border-collapse|border-color|border-left-color|border-left-style|border-left-width|border-left|border-right-color|border-right-style|border-right-width|border-right|border-spacing|border-style|border-top-color|border-top-style|border-top-width|border-top|border-width|border|bottom|caption-side|clear|clip|color|content|counter-increment|counter-reset|cue-after|cue-before|cue|cursor|direction|display|elevation|empty-cells|float|font-family|font-size-adjust|font-size|font-stretch|font-style|font-variant|font-weight|font|height|image-rendering|left|letter-spacing|line-height|list-style-image|list-style-position|list-style-type|list-style|margin-bottom|margin-left|margin-right|margin-top|marker-offset|margin|marks|max-height|max-width|min-height|min-width|-moz-border-radius|opacity|orphans|outline-color|outline-style|outline-width|outline|overflow(-[xy])?|padding-bottom|padding-left|padding-right|padding-top|padding|page-break-after|page-break-before|page-break-inside|page|pause-after|pause-before|pause|pitch-range|pitch|play-during|pointer-events|position|quotes|resize|richness|right|size|speak-header|speak-numeral|speak-punctuation|speech-rate|speak|src|stress|table-layout|text-(align|decoration|indent|rendering|shadow|transform)|top|unicode-bidi|vertical-align|visibility|voice-family|volume|white-space|widows|width|word-(spacing|wrap)|zoom|z-index)\b</string>
							<key>name</key>
							<string>support.type.property-name.css</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(:)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*(;|(?=\}))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.rule.css</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.property-value.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-property-values</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-css-cfoutput-selector</key>
		<dict>
			<key>begin</key>
			<string>\s*(?=[:.*#a-zA-Z])</string>
			<key>end</key>
			<string>(?=[/@{)])</string>
			<key>name</key>
			<string>meta.selector.css</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\b</string>
					<key>name</key>
					<string>entity.name.tag.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\.)[a-zA-Z0-9_-]+</string>
					<key>name</key>
					<string>entity.other.attribute-name.class.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#)[a-zA-Z][a-zA-Z0-9_-]*</string>
					<key>name</key>
					<string>entity.other.attribute-name.id.css</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\*</string>
					<key>name</key>
					<string>entity.name.tag.wildcard.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:+)(after|before|first-letter|first-line|selection)\b</string>
					<key>name</key>
					<string>entity.other.attribute-name.pseudo-element.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:)((first|last)-child|(first|last|only)-of-type|empty|root|target|first|left|right)\b</string>
					<key>name</key>
					<string>entity.other.attribute-name.pseudo-class.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:)(checked|enabled|default|disabled|indeterminate|invalid|optional|required|valid)\b</string>
					<key>name</key>
					<string>entity.other.attribute-name.pseudo-class.ui-state.css</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>((:)not)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.pseudo-class.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-cfoutput-selector</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.pseudo-class.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.css</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((:)nth-(?:(?:last-)?child|(?:last-)?of-type))(\()(\-?(?:\d+n?|n)(?:\+\d+)?|even|odd)(\))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:)(active|hover|link|visited|focus)\b</string>
					<key>name</key>
					<string>entity.other.attribute-name.pseudo-class.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.attribute.css</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.operator.css</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.attribute-value.css</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.attribute-value.css</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.css</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(\[)\s*(-?[_a-z\\[[:^ascii:]]][_a-z0-9\-\\[[:^ascii:]]]*)(?:\s*([~|^$*]?=)\s*(?:(-?[_a-z\\[[:^ascii:]]][_a-z0-9\-\\[[:^ascii:]]]*)|((?&gt;(['"])(?:[^\\]|\\.)*?(\6)))))?\s*(\])</string>
					<key>name</key>
					<string>meta.attribute-selector.css</string>
				</dict>
			</array>
		</dict>
		<key>source-css-cfoutput-string-double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.css</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.css</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.css</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.css</string>
				</dict>
			</array>
		</dict>
		<key>source-css-cfoutput-string-single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.css</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.css</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.css</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.css</string>
				</dict>
			</array>
		</dict>
		<key>source-css-color-values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>http://www.w3.org/TR/CSS21/syndata.html#value-def-color</string>
					<key>match</key>
					<string>\b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\b</string>
					<key>name</key>
					<string>support.constant.color.w3c-standard-color-name.css</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>These colours are mostly recognised but will not validate. ref: http://www.w3schools.com/css/css_colornames.asp</string>
					<key>match</key>
					<string>\b(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|turquoise|violet|wheat|whitesmoke|yellowgreen)\b</string>
					<key>name</key>
					<string>invalid.deprecated.color.w3c-non-standard-color-name.css</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(hsla?|rgba?)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.misc.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?x)\b
							    (0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\s*,\s*){2}
							    (0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\b)
							    (\s*,\s*((0?\.[0-9]+)|[0-1]))?
							</string>
							<key>name</key>
							<string>constant.other.color.rgb-value.css</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b([0-9]{1,2}|100)\s*%,\s*([0-9]{1,2}|100)\s*%,\s*([0-9]{1,2}|100)\s*%</string>
							<key>name</key>
							<string>constant.other.color.rgb-percentage.css</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-numeric-values</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-css-comment-block</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.css</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.css</string>
		</dict>
		<key>source-css-media-query</key>
		<dict>
			<key>begin</key>
			<string>(?i)\s*(only|not)?\s*(all|aural|braille|embossed|handheld|print|projection|screen|tty|tv)?</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.logic.media.css</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.constant.media.css</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\s*(?:(,)|(?=[{;]))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arbitrary-repitition.css</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\s*(and)?\s*(\()\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.logic.media.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?x)
	                            (
	                                ((min|max)-)?
	                                (
	                                    ((device-)?(height|width|aspect-ratio))|
	                                    (color(-index)?)|monochrome|resolution
	                                )
	                            )|grid|scan|orientation
	                            \s*(?=[:)])</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>support.type.property-name.media.css</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(:)|(?=\))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.key-value.css</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(portrait|landscape|progressive|interlace)</string>
							<key>name</key>
							<string>support.constant.property-value.css</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.numeric.css</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.arithmetic.css</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>constant.numeric.css</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s*(\d+)(/)(\d+)</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-numeric-values</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-css-media-query-list</key>
		<dict>
			<key>begin</key>
			<string>\s*(?=[^{;])</string>
			<key>end</key>
			<string>\s*(?=[{;])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-media-query</string>
				</dict>
			</array>
		</dict>
		<key>source-css-numeric-values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.constant.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b</string>
					<key>name</key>
					<string>constant.other.color.rgb-value.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
					    (?:-|\+)?(?:(?:[0-9]+(?:\.[0-9]+)?)|(?:\.[0-9]+))
					    ((?:px|pt|ch|cm|mm|in|r?em|ex|pc|deg|g?rad|dpi|dpcm|s)\b|%)?
					</string>
					<key>name</key>
					<string>constant.numeric.css</string>
				</dict>
			</array>
		</dict>
		<key>source-css-property-values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(absolute|all(-scroll)?|always|armenian|auto|avoid|baseline|below|bidi-override|block|bold|bolder|both|bottom|break-all|break-word|capitalize|center|char|circle|cjk-ideographic|col-resize|collapse|crosshair|dashed|decimal-leading-zero|decimal|default|disabled|disc|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ellipsis|fixed|geometricPrecision|georgian|groove|hand|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|inactive|inherit|inline-block|inline|inset|inside|inter-ideograph|inter-word|italic|justify|katakana-iroha|katakana|keep-all|left|lighter|line-edge|line-through|line|list-item|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|medium|middle|move|n-resize|ne-resize|newspaper|no-drop|no-repeat|nw-resize|none|normal|not-allowed|nowrap|oblique|optimize(Legibility|Quality|Speed)|outset|outside|overline|pointer|pre(-(wrap|line))?|progress|relative|repeat-x|repeat-y|repeat|right|ridge|row-resize|rtl|s-resize|scroll|se-resize|separate|small-caps|solid|square|static|strict|sub|super|sw-resize|table-footer-group|table-header-group|tb-rl|text-bottom|text-top|text|thick|thin|top|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|vertical(-(ideographic|text))?|visible(Painted|Fill|Stroke)?|w-resize|wait|whitespace|zero|smaller|larger|((xx?-)?(small|large))|painted|fill|stroke)\b</string>
					<key>name</key>
					<string>support.constant.property-value.css</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\b(?i:arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace)\b)</string>
					<key>name</key>
					<string>support.constant.font-name.css</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-numeric-values</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-color-values</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-string-double</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-string-single</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(rect)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.misc.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-numeric-values</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(format|local|url|attr|counter|counters)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.misc.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-string-single</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-string-double</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^'") \t]+</string>
							<key>name</key>
							<string>variable.parameter.misc.css</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\!\s*important</string>
					<key>name</key>
					<string>keyword.other.important.css</string>
				</dict>
			</array>
		</dict>
		<key>source-css-rule-list</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.property-list.css</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\s*\})</string>
			<key>name</key>
			<string>meta.property-list.css</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-css-comment-block</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;![-a-z])(?=[-a-z])</string>
					<key>end</key>
					<string>$|(?![-a-z])</string>
					<key>name</key>
					<string>meta.property-name.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(azimuth|background-attachment|background-color|background-image|background-position|background-repeat|background|box-shadow|border-radius|border-bottom-color|border-bottom-style|border-bottom-width|border-bottom|border-collapse|border-color|border-left-color|border-left-style|border-left-width|border-left|border-right-color|border-right-style|border-right-width|border-right|border-spacing|border-style|border-top-color|border-top-style|border-top-width|border-top|border-width|border|bottom|caption-side|clear|clip|color|content|counter-increment|counter-reset|cue-after|cue-before|cue|cursor|direction|display|elevation|empty-cells|float|font-family|font-size-adjust|font-size|font-stretch|font-style|font-variant|font-weight|font|height|image-rendering|left|letter-spacing|line-height|list-style-image|list-style-position|list-style-type|list-style|margin-bottom|margin-left|margin-right|margin-top|marker-offset|margin|marks|max-height|max-width|min-height|min-width|-moz-border-radius|opacity|orphans|outline-color|outline-style|outline-width|outline|overflow(-[xy])?|padding-bottom|padding-left|padding-right|padding-top|padding|page-break-after|page-break-before|page-break-inside|page|pause-after|pause-before|pause|pitch-range|pitch|play-during|pointer-events|position|quotes|resize|richness|right|size|speak-header|speak-numeral|speak-punctuation|speech-rate|speak|src|stress|table-layout|text-(align|decoration|indent|rendering|shadow|transform)|top|unicode-bidi|vertical-align|visibility|voice-family|volume|white-space|widows|width|word-(spacing|wrap)|zoom|z-index)\b</string>
							<key>name</key>
							<string>support.type.property-name.css</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(:)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*(;|(?=\}))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.rule.css</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.property-value.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-property-values</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-css-selector</key>
		<dict>
			<key>begin</key>
			<string>\s*(?=[:.*#a-zA-Z])</string>
			<key>end</key>
			<string>(?=[/@{)])</string>
			<key>name</key>
			<string>meta.selector.css</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\b</string>
					<key>name</key>
					<string>entity.name.tag.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\.)[a-zA-Z0-9_-]+</string>
					<key>name</key>
					<string>entity.other.attribute-name.class.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#)[a-zA-Z][a-zA-Z0-9_-]*</string>
					<key>name</key>
					<string>entity.other.attribute-name.id.css</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\*</string>
					<key>name</key>
					<string>entity.name.tag.wildcard.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:+)(after|before|first-letter|first-line|selection)\b</string>
					<key>name</key>
					<string>entity.other.attribute-name.pseudo-element.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:)((first|last)-child|(first|last|only)-of-type|empty|root|target|first|left|right)\b</string>
					<key>name</key>
					<string>entity.other.attribute-name.pseudo-class.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:)(checked|enabled|default|disabled|indeterminate|invalid|optional|required|valid)\b</string>
					<key>name</key>
					<string>entity.other.attribute-name.pseudo-class.ui-state.css</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>((:)not)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.pseudo-class.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-css-selector</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.pseudo-class.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.css</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((:)nth-(?:(?:last-)?child|(?:last-)?of-type))(\()(\-?(?:\d+n?|n)(?:\+\d+)?|even|odd)(\))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:)(active|hover|link|visited|focus)\b</string>
					<key>name</key>
					<string>entity.other.attribute-name.pseudo-class.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.css</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.attribute.css</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.operator.css</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.attribute-value.css</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.attribute-value.css</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.css</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.css</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(\[)\s*(-?[_a-z\\[[:^ascii:]]][_a-z0-9\-\\[[:^ascii:]]]*)(?:\s*([~|^$*]?=)\s*(?:(-?[_a-z\\[[:^ascii:]]][_a-z0-9\-\\[[:^ascii:]]]*)|((?&gt;(['"])(?:[^\\]|\\.)*?(\6)))))?\s*(\])</string>
					<key>name</key>
					<string>meta.attribute-selector.css</string>
				</dict>
			</array>
		</dict>
		<key>source-css-string-double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.css</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.css</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.css</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.css</string>
				</dict>
			</array>
		</dict>
		<key>source-css-string-single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.css</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.css</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.css</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.css</string>
				</dict>
			</array>
		</dict>
		<key>source-js</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>node.js shebang</string>
					<key>match</key>
					<string>^#!/usr/bin/env node</string>
					<key>name</key>
					<string>comment.line.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.prototype = { … } when extending an object</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\s*(=)\s*</string>
					<key>name</key>
					<string>meta.class.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.prototype.play = function() { … }</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*(function)?\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.prototype.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.prototype.play = myfunc</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*</string>
					<key>name</key>
					<string>meta.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.play = function() { … }</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*(function)\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: play = function() { … }</string>
					<key>match</key>
					<string>([a-zA-Z_?$][\w?$]*)\s*(=)\s*(function)\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match regular function like: function myFunc(arg) { … }</string>
					<key>match</key>
					<string>\b(function)\s+([a-zA-Z_$]\w*)?\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: foobar: function() { … }</string>
					<key>match</key>
					<string>\b([a-zA-Z_?.$][\w?.$]*)\s*:\s*\b(function)?\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.json.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.js</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Attempt to match "foo": function</string>
					<key>match</key>
					<string>(?:((')([^']*)('))|((")([^"]*)(")))\s*:\s*\b(function)?\s*(\()([^)]*)(\))</string>
					<key>name</key>
					<string>meta.function.json.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.new.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.instance.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(new)\s+(\w+(?:\.\w*)?)</string>
					<key>name</key>
					<string>meta.class.instance.constructor</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(console)\b</string>
					<key>name</key>
					<string>entity.name.type.object.js.firebug</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.(warn|info|log|error|time|timeEnd|assert)\b</string>
					<key>name</key>
					<string>support.function.js.firebug</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
					<key>name</key>
					<string>constant.numeric.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*\*(?!/)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.html.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.html.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&lt;!--|--&gt;)</string>
					<key>name</key>
					<string>comment.block.html.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(boolean|byte|char|class|double|enum|float|function|int|interface|long|short|var|void)\b</string>
					<key>name</key>
					<string>storage.type.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(const|export|extends|final|implements|native|private|protected|public|static|synchronized|throws|transient|volatile)\b</string>
					<key>name</key>
					<string>storage.modifier.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(break|case|catch|continue|default|do|else|finally|for|goto|if|import|package|return|switch|throw|try|while)\b</string>
					<key>name</key>
					<string>keyword.control.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(delete|in|instanceof|new|typeof|with)\b</string>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btrue\b</string>
					<key>name</key>
					<string>constant.language.boolean.true.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfalse\b</string>
					<key>name</key>
					<string>constant.language.boolean.false.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bnull\b</string>
					<key>name</key>
					<string>constant.language.null.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(super|this)\b</string>
					<key>name</key>
					<string>variable.language.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(debugger)\b</string>
					<key>name</key>
					<string>keyword.other.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Anchor|Applet|Area|Array|Boolean|Button|Checkbox|Date|document|event|FileUpload|Form|Frame|Function|Hidden|History|Image|JavaArray|JavaClass|JavaObject|JavaPackage|java|Layer|Link|Location|Math|MimeType|Number|navigator|netscape|Object|Option|Packages|Password|Plugin|Radio|RegExp|Reset|Select|String|Style|Submit|screen|sun|Text|Textarea|window|XMLHttpRequest)\b</string>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(s(h(ift|ow(Mod(elessDialog|alDialog)|Help))|croll(X|By(Pages|Lines)?|Y|To)?|t(op|rike)|i(n|zeToContent|debar|gnText)|ort|u(p|b(str(ing)?)?)|pli(ce|t)|e(nd|t(Re(sizable|questHeader)|M(i(nutes|lliseconds)|onth)|Seconds|Ho(tKeys|urs)|Year|Cursor|Time(out)?|Interval|ZOptions|Date|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(ome|andleEvent)|navigate|c(har(CodeAt|At)|o(s|n(cat|textual|firm)|mpile)|eil|lear(Timeout|Interval)?|a(ptureEvents|ll)|reate(StyleSheet|Popup|EventObject))|t(o(GMTString|S(tring|ource)|U(TCString|pperCase)|Lo(caleString|werCase))|est|a(n|int(Enabled)?))|i(s(NaN|Finite)|ndexOf|talics)|d(isableExternalCapture|ump|etachEvent)|u(n(shift|taint|escape|watch)|pdateCommands)|j(oin|avaEnabled)|p(o(p|w)|ush|lugins.refresh|a(ddings|rse(Int|Float)?)|r(int|ompt|eference))|e(scape|nableExternalCapture|val|lementFromPoint|x(p|ec(Script|Command)?))|valueOf|UTC|queryCommand(State|Indeterm|Enabled|Value)|f(i(nd|le(ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(nt(size|color)|rward)|loor|romCharCode)|watch|l(ink|o(ad|g)|astIndexOf)|a(sin|nchor|cos|t(tachEvent|ob|an(2)?)|pply|lert|b(s|ort))|r(ou(nd|teEvents)|e(size(By|To)|calc|turnValue|place|verse|l(oad|ease(Capture|Events)))|andom)|g(o|et(ResponseHeader|M(i(nutes|lliseconds)|onth)|Se(conds|lection)|Hours|Year|Time(zoneOffset)?|Da(y|te)|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Da(y|te)|FullYear)|FullYear|A(ttention|llResponseHeaders)))|m(in|ove(B(y|elow)|To(Absolute)?|Above)|ergeAttributes|a(tch|rgins|x))|b(toa|ig|o(ld|rderWidths)|link|ack))\b(?=\()</string>
					<key>name</key>
					<string>support.function.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(s(ub(stringData|mit)|plitText|e(t(NamedItem|Attribute(Node)?)|lect))|has(ChildNodes|Feature)|namedItem|c(l(ick|o(se|neNode))|reate(C(omment|DATASection|aption)|T(Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(ntityReference|lement)|Attribute))|tabIndex|i(nsert(Row|Before|Cell|Data)|tem)|open|delete(Row|C(ell|aption)|T(Head|Foot)|Data)|focus|write(ln)?|a(dd|ppend(Child|Data))|re(set|place(Child|Data)|move(NamedItem|Child|Attribute(Node)?)?)|get(NamedItem|Element(sBy(Name|TagName)|ById)|Attribute(Node)?)|blur)\b(?=\()</string>
					<key>name</key>
					<string>support.function.dom.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\.)(s(ystemLanguage|cr(ipts|ollbars|een(X|Y|Top|Left))|t(yle(Sheets)?|atus(Text|bar)?)|ibling(Below|Above)|ource|uffixes|e(curity(Policy)?|l(ection|f)))|h(istory|ost(name)?|as(h|Focus))|y|X(MLDocument|SLDocument)|n(ext|ame(space(s|URI)|Prop))|M(IN_VALUE|AX_VALUE)|c(haracterSet|o(n(structor|trollers)|okieEnabled|lorDepth|mp(onents|lete))|urrent|puClass|l(i(p(boardData)?|entInformation)|osed|asses)|alle(e|r)|rypto)|t(o(olbar|p)|ext(Transform|Indent|Decoration|Align)|ags)|SQRT(1_2|2)|i(n(ner(Height|Width)|put)|ds|gnoreCase)|zIndex|o(scpu|n(readystatechange|Line)|uter(Height|Width)|p(sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(i(splay|alog(Height|Top|Width|Left|Arguments)|rectories)|e(scription|fault(Status|Ch(ecked|arset)|View)))|u(ser(Profile|Language|Agent)|n(iqueID|defined)|pdateInterval)|_content|p(ixelDepth|ort|ersonalbar|kcs11|l(ugins|atform)|a(thname|dding(Right|Bottom|Top|Left)|rent(Window|Layer)?|ge(X(Offset)?|Y(Offset)?))|r(o(to(col|type)|duct(Sub)?|mpter)|e(vious|fix)))|e(n(coding|abledPlugin)|x(ternal|pando)|mbeds)|v(isibility|endor(Sub)?|Linkcolor)|URLUnencoded|P(I|OSITIVE_INFINITY)|f(ilename|o(nt(Size|Family|Weight)|rmName)|rame(s|Element)|gColor)|E|whiteSpace|l(i(stStyleType|n(eHeight|kColor))|o(ca(tion(bar)?|lName)|wsrc)|e(ngth|ft(Context)?)|a(st(M(odified|atch)|Index|Paren)|yer(s|X)|nguage))|a(pp(MinorVersion|Name|Co(deName|re)|Version)|vail(Height|Top|Width|Left)|ll|r(ity|guments)|Linkcolor|bove)|r(ight(Context)?|e(sponse(XML|Text)|adyState))|global|x|m(imeTypes|ultiline|enubar|argin(Right|Bottom|Top|Left))|L(N(10|2)|OG(10E|2E))|b(o(ttom|rder(Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(Color|Image)))\b</string>
					<key>name</key>
					<string>support.constant.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\.)(s(hape|ystemId|c(heme|ope|rolling)|ta(ndby|rt)|ize|ummary|pecified|e(ctionRowIndex|lected(Index)?)|rc)|h(space|t(tpEquiv|mlFor)|e(ight|aders)|ref(lang)?)|n(o(Resize|tation(s|Name)|Shade|Href|de(Name|Type|Value)|Wrap)|extSibling|ame)|c(h(ildNodes|Off|ecked|arset)?|ite|o(ntent|o(kie|rds)|de(Base|Type)?|l(s|Span|or)|mpact)|ell(s|Spacing|Padding)|l(ear|assName)|aption)|t(ype|Bodies|itle|Head|ext|a(rget|gName)|Foot)|i(sMap|ndex|d|m(plementation|ages))|o(ptions|wnerDocument|bject)|d(i(sabled|r)|o(c(type|umentElement)|main)|e(clare|f(er|ault(Selected|Checked|Value)))|at(eTime|a))|useMap|p(ublicId|arentNode|r(o(file|mpt)|eviousSibling))|e(n(ctype|tities)|vent|lements)|v(space|ersion|alue(Type)?|Link|Align)|URL|f(irstChild|orm(s)?|ace|rame(Border)?)|width|l(ink(s)?|o(ngDesc|wSrc)|a(stChild|ng|bel))|a(nchors|c(ce(ssKey|pt(Charset)?)|tion)|ttributes|pplets|l(t|ign)|r(chive|eas)|xis|Link|bbr)|r(ow(s|Span|Index)|ules|e(v|ferrer|l|adOnly))|m(ultiple|e(thod|dia)|a(rgin(Height|Width)|xLength))|b(o(dy|rder)|ackground|gColor))\b</string>
					<key>name</key>
					<string>support.constant.dom.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ELEMENT_NODE|ATTRIBUTE_NODE|TEXT_NODE|CDATA_SECTION_NODE|ENTITY_REFERENCE_NODE|ENTITY_NODE|PROCESSING_INSTRUCTION_NODE|COMMENT_NODE|DOCUMENT_NODE|DOCUMENT_TYPE_NODE|DOCUMENT_FRAGMENT_NODE|NOTATION_NODE|INDEX_SIZE_ERR|DOMSTRING_SIZE_ERR|HIERARCHY_REQUEST_ERR|WRONG_DOCUMENT_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR|NOT_SUPPORTED_ERR|INUSE_ATTRIBUTE_ERR)\b</string>
					<key>name</key>
					<string>support.constant.dom.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bon(R(ow(s(inserted|delete)|e(nter|xit))|e(s(ize(start|end)?|et)|adystatechange))|Mouse(o(ut|ver)|down|up|move)|B(efore(cut|deactivate|u(nload|pdate)|p(aste|rint)|editfocus|activate)|lur)|S(croll|top|ubmit|elect(start|ionchange)?)|H(over|elp)|C(hange|ont(extmenu|rolselect)|ut|ellchange|l(ick|ose))|D(eactivate|ata(setc(hanged|omplete)|available)|r(op|ag(start|over|drop|en(ter|d)|leave)?)|blclick)|Unload|P(aste|ropertychange)|Error(update)?|Key(down|up|press)|Focus|Load|A(ctivate|fter(update|print)|bort))\b</string>
					<key>name</key>
					<string>support.function.event-handler.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!|\$|%|&amp;|\*|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=|\b(in|instanceof|new|delete|typeof|void)\b</string>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Infinity|NaN|undefined)\b</string>
					<key>name</key>
					<string>constant.language.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=[=(:]|^|return|&amp;&amp;|\|\||!)\s*(/)(?![/*+{}?])</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(/)[igm]*</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\;</string>
					<key>name</key>
					<string>punctuation.terminator.statement.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,[ |\t]*</string>
					<key>name</key>
					<string>meta.delimiter.object.comma.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>meta.delimiter.method.period.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\{|\}</string>
					<key>name</key>
					<string>meta.brace.curly.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\(|\)</string>
					<key>name</key>
					<string>meta.brace.round.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\[|\]</string>
					<key>name</key>
					<string>meta.brace.square.js</string>
				</dict>
			</array>
		</dict>
		<key>source-js-cfoutput</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>node.js shebang</string>
					<key>match</key>
					<string>^#!/usr/bin/env node</string>
					<key>name</key>
					<string>comment.line.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.prototype = { … } when extending an object</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\s*(=)\s*</string>
					<key>name</key>
					<string>meta.class.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.prototype.play = function() { … }</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*(function)?\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.prototype.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.prototype.play = myfunc</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*</string>
					<key>name</key>
					<string>meta.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: Sound.play = function() { … }</string>
					<key>match</key>
					<string>([a-zA-Z_?.$][\w?.$]*)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*(function)\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: play = function() { … }</string>
					<key>match</key>
					<string>([a-zA-Z_?$][\w?$]*)\s*(=)\s*(function)\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match regular function like: function myFunc(arg) { … }</string>
					<key>match</key>
					<string>\b(function)\s+([a-zA-Z_$]\w*)?\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>match stuff like: foobar: function() { … }</string>
					<key>match</key>
					<string>\b([a-zA-Z_?.$][\w?.$]*)\s*:\s*\b(function)?\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.function.json.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.js</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.js</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Attempt to match "foo": function</string>
					<key>match</key>
					<string>(?:((')([^']*)('))|((")([^"]*)(")))\s*:\s*\b(function)?\s*(\()([^)]*)(\))</string>
					<key>name</key>
					<string>meta.function.json.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.new.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.instance.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(new)\s+(\w+(?:\.\w*)?)</string>
					<key>name</key>
					<string>meta.class.instance.constructor</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(console)\b</string>
					<key>name</key>
					<string>entity.name.type.object.js.firebug</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.(warn|info|log|error|time|timeEnd|assert)\b</string>
					<key>name</key>
					<string>support.function.js.firebug</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
					<key>name</key>
					<string>constant.numeric.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*\*(?!/)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.html.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.html.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&lt;!--|--&gt;)</string>
					<key>name</key>
					<string>comment.block.html.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(boolean|byte|char|class|double|enum|float|function|int|interface|long|short|var|void)\b</string>
					<key>name</key>
					<string>storage.type.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(const|export|extends|final|implements|native|private|protected|public|static|synchronized|throws|transient|volatile)\b</string>
					<key>name</key>
					<string>storage.modifier.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(break|case|catch|continue|default|do|else|finally|for|goto|if|import|package|return|switch|throw|try|while)\b</string>
					<key>name</key>
					<string>keyword.control.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(delete|in|instanceof|new|typeof|with)\b</string>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btrue\b</string>
					<key>name</key>
					<string>constant.language.boolean.true.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfalse\b</string>
					<key>name</key>
					<string>constant.language.boolean.false.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bnull\b</string>
					<key>name</key>
					<string>constant.language.null.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(super|this)\b</string>
					<key>name</key>
					<string>variable.language.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(debugger)\b</string>
					<key>name</key>
					<string>keyword.other.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Anchor|Applet|Area|Array|Boolean|Button|Checkbox|Date|document|event|FileUpload|Form|Frame|Function|Hidden|History|Image|JavaArray|JavaClass|JavaObject|JavaPackage|java|Layer|Link|Location|Math|MimeType|Number|navigator|netscape|Object|Option|Packages|Password|Plugin|Radio|RegExp|Reset|Select|String|Style|Submit|screen|sun|Text|Textarea|window|XMLHttpRequest)\b</string>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(s(h(ift|ow(Mod(elessDialog|alDialog)|Help))|croll(X|By(Pages|Lines)?|Y|To)?|t(op|rike)|i(n|zeToContent|debar|gnText)|ort|u(p|b(str(ing)?)?)|pli(ce|t)|e(nd|t(Re(sizable|questHeader)|M(i(nutes|lliseconds)|onth)|Seconds|Ho(tKeys|urs)|Year|Cursor|Time(out)?|Interval|ZOptions|Date|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(ome|andleEvent)|navigate|c(har(CodeAt|At)|o(s|n(cat|textual|firm)|mpile)|eil|lear(Timeout|Interval)?|a(ptureEvents|ll)|reate(StyleSheet|Popup|EventObject))|t(o(GMTString|S(tring|ource)|U(TCString|pperCase)|Lo(caleString|werCase))|est|a(n|int(Enabled)?))|i(s(NaN|Finite)|ndexOf|talics)|d(isableExternalCapture|ump|etachEvent)|u(n(shift|taint|escape|watch)|pdateCommands)|j(oin|avaEnabled)|p(o(p|w)|ush|lugins.refresh|a(ddings|rse(Int|Float)?)|r(int|ompt|eference))|e(scape|nableExternalCapture|val|lementFromPoint|x(p|ec(Script|Command)?))|valueOf|UTC|queryCommand(State|Indeterm|Enabled|Value)|f(i(nd|le(ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(nt(size|color)|rward)|loor|romCharCode)|watch|l(ink|o(ad|g)|astIndexOf)|a(sin|nchor|cos|t(tachEvent|ob|an(2)?)|pply|lert|b(s|ort))|r(ou(nd|teEvents)|e(size(By|To)|calc|turnValue|place|verse|l(oad|ease(Capture|Events)))|andom)|g(o|et(ResponseHeader|M(i(nutes|lliseconds)|onth)|Se(conds|lection)|Hours|Year|Time(zoneOffset)?|Da(y|te)|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Da(y|te)|FullYear)|FullYear|A(ttention|llResponseHeaders)))|m(in|ove(B(y|elow)|To(Absolute)?|Above)|ergeAttributes|a(tch|rgins|x))|b(toa|ig|o(ld|rderWidths)|link|ack))\b(?=\()</string>
					<key>name</key>
					<string>support.function.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(s(ub(stringData|mit)|plitText|e(t(NamedItem|Attribute(Node)?)|lect))|has(ChildNodes|Feature)|namedItem|c(l(ick|o(se|neNode))|reate(C(omment|DATASection|aption)|T(Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(ntityReference|lement)|Attribute))|tabIndex|i(nsert(Row|Before|Cell|Data)|tem)|open|delete(Row|C(ell|aption)|T(Head|Foot)|Data)|focus|write(ln)?|a(dd|ppend(Child|Data))|re(set|place(Child|Data)|move(NamedItem|Child|Attribute(Node)?)?)|get(NamedItem|Element(sBy(Name|TagName)|ById)|Attribute(Node)?)|blur)\b(?=\()</string>
					<key>name</key>
					<string>support.function.dom.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\.)(s(ystemLanguage|cr(ipts|ollbars|een(X|Y|Top|Left))|t(yle(Sheets)?|atus(Text|bar)?)|ibling(Below|Above)|ource|uffixes|e(curity(Policy)?|l(ection|f)))|h(istory|ost(name)?|as(h|Focus))|y|X(MLDocument|SLDocument)|n(ext|ame(space(s|URI)|Prop))|M(IN_VALUE|AX_VALUE)|c(haracterSet|o(n(structor|trollers)|okieEnabled|lorDepth|mp(onents|lete))|urrent|puClass|l(i(p(boardData)?|entInformation)|osed|asses)|alle(e|r)|rypto)|t(o(olbar|p)|ext(Transform|Indent|Decoration|Align)|ags)|SQRT(1_2|2)|i(n(ner(Height|Width)|put)|ds|gnoreCase)|zIndex|o(scpu|n(readystatechange|Line)|uter(Height|Width)|p(sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(i(splay|alog(Height|Top|Width|Left|Arguments)|rectories)|e(scription|fault(Status|Ch(ecked|arset)|View)))|u(ser(Profile|Language|Agent)|n(iqueID|defined)|pdateInterval)|_content|p(ixelDepth|ort|ersonalbar|kcs11|l(ugins|atform)|a(thname|dding(Right|Bottom|Top|Left)|rent(Window|Layer)?|ge(X(Offset)?|Y(Offset)?))|r(o(to(col|type)|duct(Sub)?|mpter)|e(vious|fix)))|e(n(coding|abledPlugin)|x(ternal|pando)|mbeds)|v(isibility|endor(Sub)?|Linkcolor)|URLUnencoded|P(I|OSITIVE_INFINITY)|f(ilename|o(nt(Size|Family|Weight)|rmName)|rame(s|Element)|gColor)|E|whiteSpace|l(i(stStyleType|n(eHeight|kColor))|o(ca(tion(bar)?|lName)|wsrc)|e(ngth|ft(Context)?)|a(st(M(odified|atch)|Index|Paren)|yer(s|X)|nguage))|a(pp(MinorVersion|Name|Co(deName|re)|Version)|vail(Height|Top|Width|Left)|ll|r(ity|guments)|Linkcolor|bove)|r(ight(Context)?|e(sponse(XML|Text)|adyState))|global|x|m(imeTypes|ultiline|enubar|argin(Right|Bottom|Top|Left))|L(N(10|2)|OG(10E|2E))|b(o(ttom|rder(Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(Color|Image)))\b</string>
					<key>name</key>
					<string>support.constant.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\.)(s(hape|ystemId|c(heme|ope|rolling)|ta(ndby|rt)|ize|ummary|pecified|e(ctionRowIndex|lected(Index)?)|rc)|h(space|t(tpEquiv|mlFor)|e(ight|aders)|ref(lang)?)|n(o(Resize|tation(s|Name)|Shade|Href|de(Name|Type|Value)|Wrap)|extSibling|ame)|c(h(ildNodes|Off|ecked|arset)?|ite|o(ntent|o(kie|rds)|de(Base|Type)?|l(s|Span|or)|mpact)|ell(s|Spacing|Padding)|l(ear|assName)|aption)|t(ype|Bodies|itle|Head|ext|a(rget|gName)|Foot)|i(sMap|ndex|d|m(plementation|ages))|o(ptions|wnerDocument|bject)|d(i(sabled|r)|o(c(type|umentElement)|main)|e(clare|f(er|ault(Selected|Checked|Value)))|at(eTime|a))|useMap|p(ublicId|arentNode|r(o(file|mpt)|eviousSibling))|e(n(ctype|tities)|vent|lements)|v(space|ersion|alue(Type)?|Link|Align)|URL|f(irstChild|orm(s)?|ace|rame(Border)?)|width|l(ink(s)?|o(ngDesc|wSrc)|a(stChild|ng|bel))|a(nchors|c(ce(ssKey|pt(Charset)?)|tion)|ttributes|pplets|l(t|ign)|r(chive|eas)|xis|Link|bbr)|r(ow(s|Span|Index)|ules|e(v|ferrer|l|adOnly))|m(ultiple|e(thod|dia)|a(rgin(Height|Width)|xLength))|b(o(dy|rder)|ackground|gColor))\b</string>
					<key>name</key>
					<string>support.constant.dom.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ELEMENT_NODE|ATTRIBUTE_NODE|TEXT_NODE|CDATA_SECTION_NODE|ENTITY_REFERENCE_NODE|ENTITY_NODE|PROCESSING_INSTRUCTION_NODE|COMMENT_NODE|DOCUMENT_NODE|DOCUMENT_TYPE_NODE|DOCUMENT_FRAGMENT_NODE|NOTATION_NODE|INDEX_SIZE_ERR|DOMSTRING_SIZE_ERR|HIERARCHY_REQUEST_ERR|WRONG_DOCUMENT_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR|NOT_SUPPORTED_ERR|INUSE_ATTRIBUTE_ERR)\b</string>
					<key>name</key>
					<string>support.constant.dom.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bon(R(ow(s(inserted|delete)|e(nter|xit))|e(s(ize(start|end)?|et)|adystatechange))|Mouse(o(ut|ver)|down|up|move)|B(efore(cut|deactivate|u(nload|pdate)|p(aste|rint)|editfocus|activate)|lur)|S(croll|top|ubmit|elect(start|ionchange)?)|H(over|elp)|C(hange|ont(extmenu|rolselect)|ut|ellchange|l(ick|ose))|D(eactivate|ata(setc(hanged|omplete)|available)|r(op|ag(start|over|drop|en(ter|d)|leave)?)|blclick)|Unload|P(aste|ropertychange)|Error(update)?|Key(down|up|press)|Focus|Load|A(ctivate|fter(update|print)|bort))\b</string>
					<key>name</key>
					<string>support.function.event-handler.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!|\$|%|&amp;|\*|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=|\b(in|instanceof|new|delete|typeof|void)\b</string>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Infinity|NaN|undefined)\b</string>
					<key>name</key>
					<string>constant.language.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=[=(:]|^|return|&amp;&amp;|\|\||!)\s*(/)(?![/*+{}?])</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(/)[igm]*</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\;</string>
					<key>name</key>
					<string>punctuation.terminator.statement.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,[ |\t]*</string>
					<key>name</key>
					<string>meta.delimiter.object.comma.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>meta.delimiter.method.period.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\{|\}</string>
					<key>name</key>
					<string>meta.brace.curly.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\(|\)</string>
					<key>name</key>
					<string>meta.brace.round.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\[|\]</string>
					<key>name</key>
					<string>meta.brace.square.js</string>
				</dict>
			</array>
		</dict>
		<key>source-sql</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-sql-comments</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.create.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.sql</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:^\s*(create)\s+(aggregate|conversion|database|domain|function|group|(unique\s+)?index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)(['"`]?)(\w+)\4</string>
					<key>name</key>
					<string>meta.create.sql</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.create.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:^\s*(drop)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view))</string>
					<key>name</key>
					<string>meta.drop.sql</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.create.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.table.sql</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.sql</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.other.cascade.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:\s*(drop)\s+(table)\s+(\w+)(\s+cascade)?\b)</string>
					<key>name</key>
					<string>meta.drop.sql</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.create.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.table.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:^\s*(alter)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)</string>
					<key>name</key>
					<string>meta.alter.sql</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>13</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>14</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>15</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?xi)

				# normal stuff, capture 1
				 \b(bigint|bigserial|bit|boolean|box|bytea|cidr|circle|date|double\sprecision|inet|int|integer|line|lseg|macaddr|money|oid|path|point|polygon|real|serial|smallint|sysdate|text)\b

				# numeric suffix, capture 2 + 3i
				|\b(bit\svarying|character\s(?:varying)?|tinyint|var\schar|float|interval)\((\d+)\)

				# optional numeric suffix, capture 4 + 5i
				|\b(char|number|varchar\d?)\b(?:\((\d+)\))?

				# special case, capture 6 + 7i + 8i
				|\b(numeric)\b(?:\((\d+),(\d+)\))?

				# special case, captures 9, 10i, 11
				|\b(times)(?:\((\d+)\))(\swithoutstimeszone\b)?

				# special case, captures 12, 13, 14i, 15
				|\b(timestamp)(?:(s)\((\d+)\)(\swithoutstimeszone\b)?)?

			</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b((?:primary|foreign)\s+key|references|on\sdelete(\s+cascade)?|check|constraint)\b)</string>
					<key>name</key>
					<string>storage.modifier.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b\d+\b</string>
					<key>name</key>
					<string>constant.numeric.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b(select(\s+distinct)?|insert\s+(ignore\s+)?into|update|delete|from|set|where|group\sby|or|like|and|union(\s+all)?|having|order\sby|limit|(inner|cross)\s+join|straight_join|(left|right)(\s+outer)?\s+join|natural(\s+(left|right)(\s+outer)?)?\s+join)\b)</string>
					<key>name</key>
					<string>keyword.other.DML.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b(on|((is\s+)?not\s+)?null)\b)</string>
					<key>name</key>
					<string>keyword.other.DDL.create.II.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\bvalues\b)</string>
					<key>name</key>
					<string>keyword.other.DML.II.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b(begin(\s+work)?|start\s+transaction|commit(\s+work)?|rollback(\s+work)?)\b)</string>
					<key>name</key>
					<string>keyword.other.LUW.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b(grant(\swith\sgrant\soption)?|revoke)\b)</string>
					<key>name</key>
					<string>keyword.other.authorization.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\bin\b)</string>
					<key>name</key>
					<string>keyword.other.data-integrity.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:^\s*(comment\s+on\s+(table|column|aggregate|constraint|database|domain|function|index|operator|rule|schema|sequence|trigger|type|view))\s+.*?\s+(is)\s+)</string>
					<key>name</key>
					<string>keyword.other.object-comments.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bAS\b</string>
					<key>name</key>
					<string>keyword.other.alias.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(DESC|ASC)\b</string>
					<key>name</key>
					<string>keyword.other.order.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\*</string>
					<key>name</key>
					<string>keyword.operator.star.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[!&lt;&gt;]?=|&lt;&gt;|&lt;|&gt;</string>
					<key>name</key>
					<string>keyword.operator.comparison.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>-|\+|/</string>
					<key>name</key>
					<string>keyword.operator.math.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|\|</string>
					<key>name</key>
					<string>keyword.operator.concatenator.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>List of SQL99 built-in functions from http://www.oreilly.com/catalog/sqlnut/chapter/ch04.html</string>
					<key>match</key>
					<string>(?i)\b(CURRENT_(DATE|TIME(STAMP)?|USER)|(SESSION|SYSTEM)_USER)\b</string>
					<key>name</key>
					<string>support.function.scalar.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>List of SQL99 built-in functions from http://www.oreilly.com/catalog/sqlnut/chapter/ch04.html</string>
					<key>match</key>
					<string>(?i)\b(AVG|COUNT|MIN|MAX|SUM)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.aggregate.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(CONCATENATE|CONVERT|LOWER|SUBSTRING|TRANSLATE|TRIM|UPPER)\b</string>
					<key>name</key>
					<string>support.function.string.sql</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.other.database-name.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.other.table-name.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(\w+?)\.(\w+)\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-sql-strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#source-sql-regexps</string>
				</dict>
			</array>
		</dict>
		<key>source-sql-comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(--).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-dash.sql</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#).*$\n?</string>
					<key>name</key>
					<string>comment.line.number-sign.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.c</string>
				</dict>
			</array>
		</dict>
		<key>source-sql-regexps</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/(?=\S.*/)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-sql-string_interpolation</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\/</string>
							<key>name</key>
							<string>constant.character.escape.slash.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>%r\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>We should probably handle nested bracket pairs!?! -- Allan</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.modr.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-sql-string_interpolation</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>source-sql-string_escape</key>
		<dict>
			<key>match</key>
			<string>\\.</string>
			<key>name</key>
			<string>constant.character.escape.sql</string>
		</dict>
		<key>source-sql-string_interpolation</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.sql</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#\{)([^\}]*)(\})</string>
			<key>name</key>
			<string>string.interpolated.sql</string>
		</dict>
		<key>source-sql-strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-sql-string_escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>`</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.other.backtick.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-sql-string_escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-sql-string_interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>%\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.other.quoted.brackets.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#source-sql-string_interpolation</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-quoted-single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-quoted-double</string>
				</dict>
			</array>
		</dict>
		<key>string-quoted-double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"(?!")</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#hash-delimiters</string>
				</dict>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
			</array>
		</dict>
		<key>string-quoted-single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'(?!')</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#hash-delimiters</string>
				</dict>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
			</array>
		</dict>
		<key>tag-generic-attribute</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([a-zA-Z0-9:-]+)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(=)\s*((?:[^\s&lt;&gt;/'"{;]|/(?!/&gt;))+)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>punctuation.separator.key-value.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
			</array>
		</dict>
		<key>tags-with-script</key>
		<dict>
			<key>begin</key>
			<string>(?i)(&lt;)(cfset|cfreturn)(?=\s|/?&gt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cfml</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.cfml.script</string>
			<key>end</key>
			<string>(/?&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.tag.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#source-cfml-script</string>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;)([a-zA-Z0-9:]++)(?=[^&gt;]*&gt;&lt;/\2&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)(&lt;)(/)(\2)(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html meta.scope.between-tag-pair.html</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.html</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.any.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;\?)(xml)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.xml.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\?&gt;)</string>
					<key>name</key>
					<string>meta.tag.preprocessor.xml.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-tag-generic-attribute</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-string-double-quoted</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-string-single-quoted</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;!--</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>--\s*&gt;</string>
					<key>name</key>
					<string>comment.block.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>match</key>
							<string>--</string>
							<key>name</key>
							<string>invalid.illegal.bad-comments-or-CDATA.html</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;!</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>name</key>
					<string>meta.tag.sgml.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i:DOCTYPE)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.doctype.html</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=&gt;)</string>
							<key>name</key>
							<string>meta.tag.sgml.doctype.html</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfml-tags</string>
								</dict>
								<dict>
									<key>match</key>
									<string>"[^"&gt;]*"</string>
									<key>name</key>
									<string>string.quoted.double.doctype.identifiers-and-DTDs.html</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\[CDATA\[</string>
							<key>end</key>
							<string>]](?=&gt;)</string>
							<key>name</key>
							<string>constant.other.inline-data.html</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\s*)(?!--|&gt;)\S(\s*)</string>
							<key>name</key>
							<string>invalid.illegal.bad-comments-or-CDATA.html</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:^\s+)?(&lt;)((?i:style))\b(?![^&gt;]*/&gt;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.style.html</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&lt;/)((?i:style))(&gt;)(?:\s*\n)?</string>
					<key>name</key>
					<string>source.css.embedded.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-tag-stuff</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&gt;)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.tag.end.html</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=&lt;/(?i:style))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfml-tags</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-css</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:^\s+)?(&lt;)((?i:script))\b(?![^&gt;]*/&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=&lt;/(script|SCRIPT))(&gt;)(?:\s*\n)?</string>
					<key>endCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>source.js.embedded.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-tag-stuff</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!&lt;/(?:script|SCRIPT))(&gt;)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.tag.begin.html</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.script.html</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(&lt;/)((?i:script))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfml-tags</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.comment.js</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(//).*?((?=&lt;/script)|$\n?)</string>
									<key>name</key>
									<string>comment.line.double-slash.js</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>/\*</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.comment.js</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\*/|(?=&lt;/script)</string>
									<key>name</key>
									<string>comment.block.js</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-js</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;/?)((?i:body|head|html)\b)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.structure.any.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.structure.any.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;/?)((?i:address|blockquote|dd|div|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|menu|pre)\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.block.any.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.block.any.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;/?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline.any.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?: ?/)?&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.inline.any.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;/?)([a-zA-Z0-9:]+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.other.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.other.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-entities</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;&gt;</string>
					<key>name</key>
					<string>invalid.illegal.incomplete.html</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;</string>
					<key>name</key>
					<string>invalid.illegal.bad-angle-bracket.html</string>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml-cfoutput</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;)([a-zA-Z0-9:]++)(?=[^&gt;]*&gt;&lt;/\2&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)(&lt;)(/)(\2)(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html meta.scope.between-tag-pair.html</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.html</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.any.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;\?)(xml)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.xml.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\?&gt;)</string>
					<key>name</key>
					<string>meta.tag.preprocessor.xml.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-tag-generic-attribute</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-string-double-quoted</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-string-single-quoted</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;!--</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>--\s*&gt;</string>
					<key>name</key>
					<string>comment.block.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>match</key>
							<string>--</string>
							<key>name</key>
							<string>invalid.illegal.bad-comments-or-CDATA.html</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;!</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>name</key>
					<string>meta.tag.sgml.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i:DOCTYPE)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.doctype.html</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=&gt;)</string>
							<key>name</key>
							<string>meta.tag.sgml.doctype.html</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfoutput-injection</string>
								</dict>
								<dict>
									<key>match</key>
									<string>"[^"&gt;]*"</string>
									<key>name</key>
									<string>string.quoted.double.doctype.identifiers-and-DTDs.html</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\[CDATA\[</string>
							<key>end</key>
							<string>]](?=&gt;)</string>
							<key>name</key>
							<string>constant.other.inline-data.html</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\s*)(?!--|&gt;)\S(\s*)</string>
							<key>name</key>
							<string>invalid.illegal.bad-comments-or-CDATA.html</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:^\s+)?(&lt;)((?i:style))\b(?![^&gt;]*/&gt;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.style.html</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&lt;/)((?i:style))(&gt;)(?:\s*\n)?</string>
					<key>name</key>
					<string>source.css.embedded.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-tag-stuff</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&gt;)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.tag.end.html</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=&lt;/(?i:style))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfoutput-injection</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-css-cfoutput</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:^\s+)?(&lt;)((?i:script))\b(?![^&gt;]*/&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=&lt;/(script|SCRIPT))(&gt;)(?:\s*\n)?</string>
					<key>endCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>source.js.embedded.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-tag-stuff</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!&lt;/(?:script|SCRIPT))(&gt;)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.tag.begin.html</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.script.html</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(&lt;/)((?i:script))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfoutput-injection</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.comment.js</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(//).*?((?=&lt;/script)|$\n?)</string>
									<key>name</key>
									<string>comment.line.double-slash.js</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>/\*</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.comment.js</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\*/|(?=&lt;/script)</string>
									<key>name</key>
									<string>comment.block.js</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#source-js-cfoutput</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;/?)((?i:body|head|html)\b)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.structure.any.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.structure.any.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;/?)((?i:address|blockquote|dd|div|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|menu|pre)\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.block.any.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.block.any.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;/?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline.any.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?: ?/)?&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.inline.any.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;/?)([a-zA-Z0-9:]+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.other.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.other.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-cfoutput-entities</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;&gt;</string>
					<key>name</key>
					<string>invalid.illegal.incomplete.html</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;</string>
					<key>name</key>
					<string>invalid.illegal.bad-angle-bracket.html</string>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml-cfoutput-entities</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.html</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.html</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&amp;)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)</string>
					<key>name</key>
					<string>constant.character.entity.html</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;</string>
					<key>name</key>
					<string>invalid.illegal.bad-ampersand.html</string>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml-cfoutput-string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.html</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-cfoutput-entities</string>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml-cfoutput-string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.html</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-cfoutput-entities</string>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml-cfoutput-tag-generic-attribute</key>
		<dict>
			<key>match</key>
			<string>\b([a-zA-Z\-:]+)</string>
			<key>name</key>
			<string>entity.other.attribute-name.html</string>
		</dict>
		<key>text-html-cfml-cfoutput-tag-id-attribute</key>
		<dict>
			<key>begin</key>
			<string>\b(id)\b\s*(=)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.id.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;='|")</string>
			<key>name</key>
			<string>meta.attribute-with-value.id.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.html</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.toc-list.id.html</string>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-entities</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.html</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.toc-list.id.html</string>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfoutput-injection</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-cfoutput-entities</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml-cfoutput-tag-stuff</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfoutput-injection</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-cfoutput-tag-id-attribute</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-cfoutput-tag-generic-attribute</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-cfoutput-string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-cfoutput-string-single-quoted</string>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml-entities</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.html</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.html</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&amp;)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)</string>
					<key>name</key>
					<string>constant.character.entity.html</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;</string>
					<key>name</key>
					<string>invalid.illegal.bad-ampersand.html</string>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml-string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.html</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-entities</string>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml-string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.html</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-entities</string>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml-tag-generic-attribute</key>
		<dict>
			<key>match</key>
			<string>\b([a-zA-Z\-:]+)</string>
			<key>name</key>
			<string>entity.other.attribute-name.html</string>
		</dict>
		<key>text-html-cfml-tag-id-attribute</key>
		<dict>
			<key>begin</key>
			<string>\b(id)\b\s*(=)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.id.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;='|")</string>
			<key>name</key>
			<string>meta.attribute-with-value.id.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.html</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.toc-list.id.html</string>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-entities</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.html</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.toc-list.id.html</string>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfml-tags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#text-html-cfml-entities</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>text-html-cfml-tag-stuff</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-tags</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-tag-id-attribute</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-tag-generic-attribute</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-html-cfml-string-single-quoted</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>embedding.cfml</string>
</dict>
</plist>
