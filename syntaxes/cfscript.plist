<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>CFML Script</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#core</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#round-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#square-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#curly-brackets</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*\*(?!/)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.cfml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.cfml</string>
				</dict>
			</array>
		</dict>
		<key>component</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(component)(?=(\s+|{))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.class.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#component-attributes</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(interface)(?=(\s+|{))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.interface.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.interface.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#component-attributes</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>component-attributes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(extends)\s*(=)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.extends.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((")([a-zA-Z0-9:.]+)?("))|((')([a-zA-Z0-9:.]+)?('))|([a-zA-Z0-9:.]+)|(?=[^a-zA-Z0-9:.])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.cfml</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.cfml</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml entity.other.inherited-class.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.class.inheritance.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-generic-attribute</string>
				</dict>
			</array>
		</dict>
		<key>constructor</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(new)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.new.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))|(?=[^_$\w.\(])</string>
					<key>name</key>
					<string>meta.instance.constructor</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.class.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>([_$\w.]*\.)?([_$\w]*)(?=\()</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.arguments.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.arguments.end.cfml</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function-call.method.arguments.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>,</string>
									<key>name</key>
									<string>punctuation.definition.separator.arguments.cfml</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i:(\w+)\s*(?=\=[^\=]))</string>
									<key>name</key>
									<string>entity.other.method-parameter.cfml</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>core</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#labels</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#for</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#switch</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation</string>
				</dict>
			</array>
		</dict>
		<key>curly-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.curly.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.curly.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.braces.curly</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#core</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#support</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constructor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#component</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-in-script-cf</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-in-script</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
			</array>
		</dict>
		<key>for</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)\b(for)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.loop.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.for.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.brace.round.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#keyword-storage</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#punctuation</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)
(?:
  (?:
    (?i:\b(private|package|public|remote)\s+)?
    (?i:\b
      (void)\s+
      |
      (any|array|binary|boolean|component|date|guid|numeric|query|string|struct|xml|uuid)\s+
      |
      ([A-Za-z0-9_\.$]+)\s+
      |
      ([A-Za-z0-9_\.$]+)(\[\])?\s+
    )?
  )
)
(?i:(function))
\s+
(?:
  (init)
  |
  ([_$a-zA-Z][$\w]*)
)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.void.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.primitive.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.object.cfml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.object.array.cfml</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>meta.group.braces.square meta.brace.square.cfml</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.cfml</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.constructor.cfml</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.function.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-declaration-parameters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-properties</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\b[_$a-zA-Z][$\w]*)\s*=\s*(function)(?:(?=\s|[(]))\s*([_$a-zA-Z][$\w]*)?\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>name</key>
					<string>meta.function.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-declaration-parameters</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)\b(function)(?=\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>name</key>
					<string>meta.function.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-declaration-parameters</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-call</key>
		<dict>
			<key>begin</key>
			<string>([_$a-zA-Z][$\w]*)\s*(?=\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.function.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=\))</string>
			<key>name</key>
			<string>meta.function-call.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.arguments.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.definition.separator.arguments.cfml</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i:(\w+)\s*(?=\=[^\=]))</string>
							<key>name</key>
							<string>entity.other.function-parameter.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-declaration-parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i:required)</string>
							<key>name</key>
							<string>keyword.other.required.argument.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage-types</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[_$a-zA-Z][$\w]*</string>
							<key>name</key>
							<string>variable.parameter.function.cfml</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.parameter.function.cfml</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>=</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[,)])</string>
							<key>name</key>
							<string>meta.parameter.optional.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-generic-attribute</string>
				</dict>
			</array>
		</dict>
		<key>hash-delimiters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>##</string>
					<key>name</key>
					<string>constant.character.escape.hash.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>#</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.hash.cfml.start</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.cfml.script</string>
					<key>end</key>
					<string>#</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.hash.cfml.end</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#core</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>keyword-storage</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(var)\b</string>
					<key>name</key>
					<string>storage.modifier.cfml</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#keyword-storage</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(return)\b</string>
					<key>name</key>
					<string>keyword.control.flow.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(if|else)\b</string>
					<key>name</key>
					<string>keyword.control.conditional.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(catch|finally|rethrow|throw|try)\b(?!\()</string>
					<key>name</key>
					<string>keyword.control.trycatch.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(break|continue|do|while)\b</string>
					<key>name</key>
					<string>keyword.control.loop.cfml</string>
				</dict>
			</array>
		</dict>
		<key>labels</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)
(?&lt;!\?)(?&lt;!\?\s)(?=(
  ((')((?:[^']|\\')*)('))|
  ((")((?:[^"]|\\")*)("))
)\s*:)</string>
					<key>end</key>
					<string>:</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.label.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\.|\?|\?\s)([_$a-zA-Z][$\w]*)\s*(:)</string>
					<key>name</key>
					<string>constant.other.object.key.cfml</string>
				</dict>
			</array>
		</dict>
		<key>language-constant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:true)\b</string>
					<key>name</key>
					<string>constant.language.boolean.true.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:false)\b</string>
					<key>name</key>
					<string>constant.language.boolean.false.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:null)\b</string>
					<key>name</key>
					<string>constant.language.null.cfml</string>
				</dict>
			</array>
		</dict>
		<key>language-variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:super)\b</string>
					<key>name</key>
					<string>variable.language.super.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:this)\b</string>
					<key>name</key>
					<string>variable.language.this.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:thread)\b(?=[\[.])</string>
					<key>name</key>
					<string>variable.language.scope.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(?i:(application|arguments|attributes|caller|cgi|client|cookie|flash|form|local|request|server|session|thistag|url|variables|self|argumentcollection))\b</string>
					<key>name</key>
					<string>variable.language.scope.cfml</string>
				</dict>
			</array>
		</dict>
		<key>method-call</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\.)([_$a-zA-Z][$\w]*)\s*(?=\()</string>
			<key>end</key>
			<string>(?&lt;=\))</string>
			<key>name</key>
			<string>meta.function-call.method.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.method.arguments.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.definition.separator.arguments.cfml</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i:(\w+)\s*(?=\=[^\=]))</string>
							<key>name</key>
							<string>entity.other.method-parameter.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>number</key>
		<dict>
			<key>match</key>
			<string>((\b[0-9]+)|(\.[0-9]+[0-9\.]*)|(0(x|X)[0-9a-fA-F]+)|(\.[0-9]+)((e|E)(\+|-)?[0-9]+)?([LlFfUuDd]|UL|ul)?)\b</string>
			<key>name</key>
			<string>constant.numeric.cfml</string>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(in|new|void)\b</string>
					<key>name</key>
					<string>keyword.operator.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!(?!=)|&amp;&amp;|\|\|</string>
					<key>name</key>
					<string>keyword.operator.logical.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i:(not|and|or|xor|eqv|imp))\b</string>
					<key>name</key>
					<string>keyword.operator.logical.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i:(greater|less|than|equal\s+to|does|contains|equal|eq|neq|lt|lte|le|gt|gte|ge|and|is))\b</string>
					<key>name</key>
					<string>keyword.operator.decision.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=(?!=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%=|&amp;=|\*=|\+=|-=|/=</string>
					<key>name</key>
					<string>keyword.operator.assignment.augmented.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;</string>
					<key>name</key>
					<string>keyword.operator.concat.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;=|&gt;=|&lt;|&gt;</string>
					<key>name</key>
					<string>keyword.operator.relational.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>==|!=</string>
					<key>name</key>
					<string>keyword.operator.comparison.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--|\+\+|/|%|\*|\+|-</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\?|:</string>
					<key>name</key>
					<string>keyword.operator.ternary.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>keyword.operator.accessor.cfml</string>
				</dict>
			</array>
		</dict>
		<key>punctuation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.statement.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>meta.delimiter.comma.cfml</string>
				</dict>
			</array>
		</dict>
		<key>round-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.braces.round</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\)</string>
					<key>name</key>
					<string>invalid.illegal.stray.brace.round.cfml</string>
				</dict>
			</array>
		</dict>
		<key>square-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.square.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.square.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.braces.square</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>storage-types</key>
		<dict>
			<key>match</key>
			<string>\b(?i:(function|string|date|struct|array|void|binary|numeric|boolean|query|xml|uuid|any))\b</string>
			<key>name</key>
			<string>storage.type.primitive.cfml</string>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-quoted-single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-quoted-double</string>
				</dict>
			</array>
		</dict>
		<key>string-quoted-double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"(?!")</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hash-delimiters</string>
				</dict>
			</array>
		</dict>
		<key>string-quoted-single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'(?!')</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hash-delimiters</string>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(createobject)(\()(?=(?:\s*type\s*=)?\s*["']component["']\s*,)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.support.function-call.arguments.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.support.function-call.cfml meta.support.function-call.createcomponent.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(createobject)(\()(?=(?:\s*type\s*=)?\s*["']java["']\s*,)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.support.function-call.arguments.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.support.function-call.cfml meta.support.function-call.createjavaobject.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
(?&lt;!\.)\b
(?i:
    (abs|acos|addsoaprequestheader|addsoapresponseheader|ajaxlink|ajaxonload|applicationstarttime
    |applicationstop|array|arrayappend|arrayavg|arrayclear|arraycontains|arraycontainsnocase
    |arraydelete|arraydeleteat|arrayeach|arrayevery|arrayfilter|arrayfind|arrayfindall|arrayfindallnocase
    |arrayfindnocase|arrayfirst|arrayindexexists|arrayinsertat|arrayisdefined|arrayisempty
    |arraylast|arraylen|arraymap|arraymax|arraymedian|arraymerge|arraymid|arraymin|arraynew|arrayprepend
    |arrayreduce|arrayresize|arrayreverse|arrayset|arrayslice|arraysome|arraysort|arraysum|arrayswap
    |arraytolist|arraytostruct|asc|asin|atn|beat|binarydecode|binaryencode|bitand|bitmaskclear|bitmaskread
    |bitmaskset|bitnot|bitor|bitshln|bitshrn|bitxor|cacheclear|cachecount|cachedelete|cacheget|cachegetall
    |cachegetallids|cachegetdefaultcachename|cachegetmetadata|cachegetproperties|cacheidexists|cachekeyexists
    |cacheput|cacheremove|cacheremoveall|cachesetproperties|callstackdump|callstackget|canonicalize|ceiling
    |cfusion_decrypt|cfusion_encrypt|charsetdecode|charsetencode|chr|cjustify|collectioneach|collectionevery
    |collectionfilter|collectionmap|collectionreduce|collectionsome|compare|comparenocase|componentcacheclear
    |componentcachelist|componentinfo|compress|contractpath|cos|createdate|createdatetime|createdynamicproxy
    |createguid|createobject|createodbcdate|createodbcdatetime|createodbctime|createtime|createtimespan
    |createuniqueid|createuuid|csrfgeneratetoken|csrfverifytoken|ctcacheclear|ctcachelist
    |datasourceflushmetacache|dateadd|datecompare|dateconvert|datediff|dateformat|datepart|datetimeformat|day
    |dayofweek|dayofweekasstring|dayofweekshortasstring|dayofyear|daysinmonth|daysinyear|de|decimalformat
    |decodefromurl|decrementvalue|decrypt|decryptbinary|deleteclientvariable|deserializejson|directorycopy
    |directorycreate|directorydelete|directoryexists|directorylist|directoryrename|dollarformat|dump|duplicate
    |each|echo|empty|encodeforcss|encodefordn|encodeforhtml|encodeforhtmlattribute|encodeforjavascript
    |encodeforldap|encodeforurl|encodeforxml|encodeforxmlattribute|encodeforxpath|encrypt|encryptbinary|entitydelete
    |entityload|entityloadbyexample|entityloadbypk|entitymerge|entitynamearray|entitynamelist|entitynew|entityreload
    |entitysave|entitytoquery|esapidecode|esapiencode|evaluate|exp|expandpath|extract|fileappend|fileclose|filecopy
    |filedelete|fileexists|filegetmimetype|fileiseof|filemove|fileopen|fileread|filereadbinary|filereadline|fileseek
    |filesetaccessmode|filesetattribute|filesetlastmodified|fileskipbytes|fileupload|fileuploadall|filewrite
    |filewriteline|find|findnocase|findoneof|firstdayofmonth|fix|formatbasen|generatesecretkey|getapplicationmetadata
    |getapplicationsettings|getauthuser|getbasetagdata|getbasetaglist|getbasetemplatepath|getbuiltinfunction
    |getcanonicalpath|getclasspath|getclientvariableslist|getcomponentmetadata|getcontextroot|getcpuusage
    |getcurrentcontext|getcurrenttemplatepath|getdirectoryfrompath|getencoding|getfilefrompath|getfileinfo|getfreespace
    |getfunctioncalledname|getfunctiondata|getfunctionkeywords|getfunctionlist|gethttprequestdata|gethttptimestring
    |getk2serverdoccount|getk2serverdoccountlimit|getlocale|getlocaledisplayname|getlocalhostip|getluceeid
    |getmemoryusage|getmetadata|getmetricdata|getnumericdate|getpagecontext|getprinterlist|getprofilesections
    |getprofilestring|getreadableimageformats|getsoaprequest|getsoaprequestheader|getsoapresponse|getsoapresponseheader
    |getsystemfreememory|getsystemtotalmemory|gettagdata|gettaglist|gettempdirectory|gettempfile|gettemplatepath
    |gettickcount|gettimezone|gettimezoneinfo|gettoken|gettotalspace|getuserroles|getvariable|getvfsmetadata
    |getwriteableimageformats|hash|hash40|hmac|hour|htmlcodeformat|htmleditformat|htmlparse|iif|imageaddborder
    |imageblur|imageclearrect|imagecopy|imagecrop|imagedrawarc|imagedrawbeveledrect|imagedrawcubiccurve|imagedrawimage
    |imagedrawline|imagedrawlines|imagedrawoval|imagedrawpoint|imagedrawquadraticcurve|imagedrawrect|imagedrawroundrect
    |imagedrawtext|imagefilter|imagefiltercolormap|imagefiltercurves|imagefilterkernel|imagefilterwarpgrid|imageflip
    |imagefonts|imageformats|imagegetblob|imagegetbufferedimage|imagegetexifmetadata|imagegetexiftag|imagegetheight
    |imagegetiptctag|imagegetwidth|imagegrayscale|imageinfo|imagenegative|imagenew|imageoverlay|imagepaste|imageread
    |imagereadbase64|imageresize|imagerotate|imagerotatedrawingaxis|imagescaletofit|imagesetantialiasing
    |imagesetbackgroundcolor|imagesetdrawingalpha|imagesetdrawingcolor|imagesetdrawingstroke|imagesetdrawingtransparency
    |imagesharpen|imageshear|imagesheardrawingaxis|imagetranslate|imagetranslatedrawingaxis|imagewrite|imagewritebase64
    |imagexordrawingmode|incrementvalue|inputbasen|insert|int|invoke|isarray|isbinary|isboolean|isclosure
    |iscustomfunction|isdate|isdebugmode|isdefined|isempty|isimage|isimagefile|isinstanceof|isipinrange|isipv6
    |isjson|isleapyear|islocalhost|isnotmap|isnull|isnumeric|isnumericdate|isobject|ispdfobject|isquery|issimplevalue
    |issoaprequest|isstruct|isuserinanyrole|isuserinrole|isuserloggedin|isvalid|isvideofile|iswddx|isxml|isxmlattribute
    |isxmldoc|isxmlelem|isxmlnode|isxmlroot|iszipfile|javacast|jsstringformat|lcase|left|len|listappend|listavg
    |listchangedelims|listcompact|listcontains|listcontainsnocase|listdeleteat|listeach|listevery|listfilter|listfind
    |listfindnocase|listfirst|listgetat|listindexexists|listinsertat|listitemtrim|listlast|listlen|listmap|listprepend
    |listqualify|listreduce|listremoveduplicates|listrest|listsetat|listsome|listsort|listtoarray|listtrim
    |listvaluecount|listvaluecountnocase|ljustify|location|log|log10|lscurrencyformat|lsdateformat|lsdatetimeformat
    |lsdayofweek|lseurocurrencyformat|lsiscurrency|lsisdate|lsisnumeric|lsnumberformat|lsparsecurrency|lsparsedatetime
    |lsparseeurocurrency|lsparsenumber|lstimeformat|lsweek|ltrim|max|metaphone|mid|millisecond|min|minute|month
    |monthasstring|monthshortasstring|newline|now|nowserver|nullvalue|numberformat|objectequals|objectload|objectsave
    |ormclearsession|ormcloseallsessions|ormclosesession|ormevictcollection|ormevictentity|ormevictqueries
    |ormexecutequery|ormflush|ormgetsession|ormgetsessionfactory|ormreload|pagepoolclear|pagepoollist|paragraphformat
    |parameterexists|parsedatetime|parsenumber|pi|precisionevaluate|preservesinglequotes|quarter|query|queryaddcolumn
    |queryaddrow|querycolumnarray|querycolumncount|querycolumndata|querycolumnexists|querycolumnlist|queryconvertforgrid
    |querycurrentrow|querydeletecolumn|querydeleterow|queryeach|queryevery|queryexecute|queryfilter|querygetcell
    |querygetrow|querymap|querynew|queryrecordcount|queryreduce|queryrowdata|querysetcell|queryslice|querysome
    |querysort|quotedvaluelist|rand|randomize|randrange|refind|refindnocase|releasecomobject|rematch|rematchnocase
    |removechars|repeatstring|replace|replacelist|replacenocase|rereplace|rereplacenocase|restdeleteapplication
    |restinitapplication|restsetresponse|reverse|right|rjustify|round|rtrim|second|sendgatewaymessage|serialize
    |serializejson|sessioninvalidate|sessionrotate|sessionstarttime|setencoding|setlocale|setprofilestring|settimezone
    |setvariable|sgn|sin|sizeof|sleep|soundex|spanexcluding|spanincluding|spreadsheetnew|spreadsheetsetcellvalue
    |spreadsheetwrite|sqr|sslcertificateinstall|sslcertificatelist|storeaddacl|storegetacl|storesetacl|stringlen|stripcr
    |structappend|structclear|structcopy|structcount|structdelete|structeach|structevery|structfilter|structfind
    |structfindkey|structfindvalue|structget|structinsert|structisempty|structkeyarray|structkeyexists|structkeylist
    |structkeytranslate|structmap|structnew|structreduce|structsome|structsort|structupdate|systemcacheclear|systemoutput
    |tan|threadjoin|threadterminate|throw|timeformat|tobase64|tobinary|tonumeric|toscript|tostring|trace|transactioncommit
    |transactionrollback|transactionsetsavepoint|trim|truefalseformat|ucase|ucfirst|unserializejava|urldecode|urlencode
    |urlencodedformat|urlsessionformat|val|valuearray|valuelist|verifyclient|week|wrap|writedump|writelog|writeoutput
    |xmlchildpos|xmlelemnew|xmlformat|xmlgetnodetype|xmlnew|xmlparse|xmlsearch|xmltransform|xmlvalidate|year|yesnoformat)
  )(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.support.function-call.arguments.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.arguments.cfml punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.support.function-call.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
(\.)
(?i:
  (add|addcolumn|addrow|append|avg|blur|cjustify|clear|clearrect|columnarray|columncount|columndata|columnexists
  |columnlist|compare|comparenocase|contains|containsnocase|copy|count|crop|currentrow|dateformat|day|dayofweek
  |dayofyear|daysinmonth|daysinyear|delete|deleteat|deletecolumn|deleterow|diff|drawarc|drawcubiccurve|drawline
  |drawlines|drawoval|drawpoint|drawquadraticcurve|drawrect|drawroundrect|each|every|filter|find|findall
  |findallnocase|findkey|findnocase|findoneof|findvalue|first|firstdayofmonth|flip|get|getbufferedimage|getcell
  |getheight|getrow|gettoken|getwidth|grayscale|hour|indexexists|info|insert|insertat|isdefined|isempty|keyarray
  |keyexists|keylist|keytranslate|last|lcase|left|len|listappend|listavg|listchangedelims|listcompact|listcontains
  |listcontainsnocase|listdeleteat|listeach|listevery|listfilter|listfind|listfindnocase|listfirst|listgetat
  |listindexexists|listinsertat|listitemtrim|listlast|listlen|listmap|listprepend|listqualify|listreduce
  |listremoveduplicates|listrest|listsetat|listsome|listsort|listtoarray|listvaluecount|listvaluecountnocase
  |ljustify|lsdateformat|lsdayofweek|ltrim|map|max|median|merge|mid|min|minute|month|overlay|part|paste|prepend
  |quarter|recordcount|reduce|refind|refindnocase|rematch|rematchnocase|removechars|repeatstring|replace|replacenocase
  |rereplace|rereplacenocase|resize|reverse|right|rowdata|rtrim|scaletofit|second|set|setantialiasing|setcell
  |setdrawingstroke|sharpen|slice|some|sort|spanexcluding|spanincluding|stripcr|sum|swap|tolist|tostruct|translate
  |trim|ucase|update|week|wrap|writebase64|year)
)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.accessor.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.member.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.member.arguments.cfml punctuation.definition.arguments.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.support.function-call.member.arguments.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.support.function-call.member.arguments.cfml punctuation.definition.arguments.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.support.function-call.member.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>switch</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)\b(switch)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.switch.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.curly.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.switch.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#round-brackets</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.brace.curly.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?&lt;!\.)\b(case|default)\b</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.control.switch.cfml</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=:)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#core</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>tag-generic-attribute</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([a-zA-Z0-9:-]+)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(=)\s*((?:[^\s&lt;&gt;/'"{;]|/(?!/&gt;))+)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>punctuation.separator.key-value.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-string</string>
				</dict>
			</array>
		</dict>
		<key>tag-generic-attribute-script</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([a-zA-Z0-9:-]+)\b</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>=</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^\s=])|(?=[;{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>tag-in-script</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(property)(?!\s+in\b)(\s+(any|array|binary|boolean|component|date|guid|numeric|query|string|struct|xml|uuid|[_$a-zA-Z][$\w]*))?\s+([_$a-zA-Z][$\w]*\b)(?!\s*=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml meta.tag.property.name.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(;|{))</string>
					<key>name</key>
					<string>meta.tag.script.cfml meta.tag.property.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(property)(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*$|\s*[{;]))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(;|{))</string>
					<key>name</key>
					<string>meta.tag.script.cfml meta.tag.property.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(param)(?!\s+in\b)(?=\s+(name|default|max|maxLength|min|pattern|type)\s*=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(param)(?!\s+in\b)\s+([_$a-zA-Z][$\w\.]*)(?=\s+(name|default|max|maxLength|min|pattern|type))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(param)(?!\s+in\b)(\s+([_$a-zA-Z][$\w]*))?\s+([_$a-zA-Z][$\w\.]*\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!\.)\b(param)(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*[{;]|\s*$))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)(\b)(?i:(abort))(?!s+in\b)(?=(s+[a-zA-Z]|s*;|s*$))</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
(?&lt;!\.)(\b)
(?i:
  (ajaximport|ajaxproxy|applet|application|argument|associate|authenticate|break|cache|chart|chartdata
  |chartseries|col|collection|content|cookie|dbinfo|directory|div|document|documentitem
  |documentsection|dump|error|execute|exit|feed|file|flush|form|forward|ftp|graph|graphdata
  |header|htmlbody|htmlhead|http|httpparam|image|imap|import|include|index|input|insert|invoke|invokeargument
  |layout|layoutarea|ldap|location|lock|log|login|loginuser|logout|loop|mail|mailparam|mailpart|map|mapitem|mediaplayer
  |module|object|objectcache|output|pageencoding|pdf|pdfparam|pop|processingdirective|procparam|procresult
  |query|queryparam|registry|rethrow|retry|savecontent|schedule|search|select|servlet|servletparam
  |setting|silent|sleep|slider|stopwatch|storedproc|table|textinput|thread|throw|timer|trace|transaction
  |update|video|videoplayer|videoplayerparam|wddx|window|xml|zip|zipparam)
)(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*[{]|\s*$))</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>tag-in-script-cf</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(cf[\w]+)\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.tag.script.cf.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.other.attribute-name.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b([a-zA-Z0-9:-]+)\b</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>=</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.key-value.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=[^\s=])|(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>tag-string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-string-quoted-single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-quoted-double</string>
				</dict>
			</array>
		</dict>
		<key>tag-string-quoted-double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"(?!")</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hash-delimiters</string>
				</dict>
			</array>
		</dict>
		<key>tag-string-quoted-single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'(?!')</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hash-delimiters</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b[A-Z][_$\dA-Z]*\b</string>
					<key>name</key>
					<string>variable.other.constant.cfml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.dollar.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(\$)[$\w]+</string>
					<key>name</key>
					<string>variable.other.dollar.cfml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.class.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.accessor.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.static.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([A-Z][$\w]*)\s*(\.)([_$a-zA-Z][$\w]*)</string>
					<key>name</key>
					<string>meta.property.class.cfml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.object.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\.)[_$a-zA-Z][$\w]*\s*(?=[\[\.])</string>
					<key>name</key>
					<string>variable.other.object.cfml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;=\.)\s*[_$a-zA-Z][$\w]*</string>
					<key>name</key>
					<string>meta.property.object.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[_$a-zA-Z][$\w]*</string>
					<key>name</key>
					<string>variable.other.cfml</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.cfml.script</string>
</dict>
</plist>
